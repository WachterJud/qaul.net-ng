syntax = "proto3";
package qaul.net.messaging;

// qaul network messaging service
//
// is responsible to distribute messages to users
// the container contains the entire message with signature
message Container {
    // signed by sending user
    bytes signature = 1;
    // Message envelope
    Envelope envelope = 2;
}

// message envelop with sender and receiver
message Envelope {
    // the qaul ID of the sender
    bytes sender_id = 1;
    // the qaul ID of the receiver
    bytes receiver_id = 2;
    // encrypted message data
    repeated Data data = 3;
}

// encrypted message data
message Data {
    // message nonce for encryption
    uint64 nonce = 1;
    // the encrypted message data
    bytes data = 2;
}

// messaging unified message
message Messaging {
    oneof message {
        // confirm chat message
        Confirmation confirmation_message = 1;
        // crypto service
        CryptoService crypto_service = 2;
        // chat message
        ChatMessage chat_message = 3;
        // file sharing message
        FileMessage file_message = 4;
        // group chat message
        GroupChatMessage group_chat_message = 5;
        // rtc message
        RtcMessage rtc_message = 6;
    }
}

// Crypto Service Message
//
// This message is for crypto specific tasks,
// such as completing a handshake.
message CryptoService {

}

// message received confirmation
// 
// every message that was received by a user
// sends an acknowledgment package, to the sender
// to confirm the receive.
message Confirmation {
    // message ID
    bytes message_id = 1;
    // receveived at timestamp
    uint64 received_at = 2;
}

// chat message
message ChatMessage {
    // group chat
    bool group = 1;
    // conversation id 
    // (only for group chat messages)
    bytes conversation_id = 2;
    // sent timestamp
    uint64 sent_at = 3;
    // message
    string content = 4;
}

// file message
message FileMessage {
    bytes content = 1;
}

// group chat message
message GroupChatMessage {
    bytes content = 1;
}

// rtc message
message RtcMessage {
    bytes content = 1;
}