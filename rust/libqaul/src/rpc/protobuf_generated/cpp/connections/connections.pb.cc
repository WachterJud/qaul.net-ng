// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: connections/connections.proto

#include "connections/connections.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace qaul {
namespace rpc {
namespace connections {
PROTOBUF_CONSTEXPR Connections::Connections(
    ::_pbi::ConstantInitialized)
  : _oneof_case_{}{}
struct ConnectionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectionsDefaultTypeInternal() {}
  union {
    Connections _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectionsDefaultTypeInternal _Connections_default_instance_;
PROTOBUF_CONSTEXPR InternetNodesRequest::InternetNodesRequest(
    ::_pbi::ConstantInitialized){}
struct InternetNodesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternetNodesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternetNodesRequestDefaultTypeInternal() {}
  union {
    InternetNodesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternetNodesRequestDefaultTypeInternal _InternetNodesRequest_default_instance_;
PROTOBUF_CONSTEXPR InternetNodesList::InternetNodesList(
    ::_pbi::ConstantInitialized)
  : nodes_()
  , info_(0)
{}
struct InternetNodesListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternetNodesListDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternetNodesListDefaultTypeInternal() {}
  union {
    InternetNodesList _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternetNodesListDefaultTypeInternal _InternetNodesList_default_instance_;
PROTOBUF_CONSTEXPR InternetNodesEntry::InternetNodesEntry(
    ::_pbi::ConstantInitialized)
  : address_(&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}){}
struct InternetNodesEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InternetNodesEntryDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~InternetNodesEntryDefaultTypeInternal() {}
  union {
    InternetNodesEntry _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InternetNodesEntryDefaultTypeInternal _InternetNodesEntry_default_instance_;
}  // namespace connections
}  // namespace rpc
}  // namespace qaul
static ::_pb::Metadata file_level_metadata_connections_2fconnections_2eproto[4];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_connections_2fconnections_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_connections_2fconnections_2eproto = nullptr;

const uint32_t TableStruct_connections_2fconnections_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::Connections, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::Connections, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::Connections, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::InternetNodesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::InternetNodesList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::InternetNodesList, info_),
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::InternetNodesList, nodes_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::InternetNodesEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::qaul::rpc::connections::InternetNodesEntry, address_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::qaul::rpc::connections::Connections)},
  { 11, -1, -1, sizeof(::qaul::rpc::connections::InternetNodesRequest)},
  { 17, -1, -1, sizeof(::qaul::rpc::connections::InternetNodesList)},
  { 25, -1, -1, sizeof(::qaul::rpc::connections::InternetNodesEntry)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::qaul::rpc::connections::_Connections_default_instance_._instance,
  &::qaul::rpc::connections::_InternetNodesRequest_default_instance_._instance,
  &::qaul::rpc::connections::_InternetNodesList_default_instance_._instance,
  &::qaul::rpc::connections::_InternetNodesEntry_default_instance_._instance,
};

const char descriptor_table_protodef_connections_2fconnections_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\035connections/connections.proto\022\024qaul.rp"
  "c.connections\"\301\002\n\013Connections\022L\n\026interne"
  "t_nodes_request\030\001 \001(\0132*.qaul.rpc.connect"
  "ions.InternetNodesRequestH\000\022F\n\023internet_"
  "nodes_list\030\002 \001(\0132\'.qaul.rpc.connections."
  "InternetNodesListH\000\022F\n\022internet_nodes_ad"
  "d\030\003 \001(\0132(.qaul.rpc.connections.InternetN"
  "odesEntryH\000\022I\n\025internet_nodes_remove\030\004 \001"
  "(\0132(.qaul.rpc.connections.InternetNodesE"
  "ntryH\000B\t\n\007message\"\026\n\024InternetNodesReques"
  "t\"v\n\021InternetNodesList\022(\n\004info\030\001 \001(\0162\032.q"
  "aul.rpc.connections.Info\0227\n\005nodes\030\002 \003(\0132"
  "(.qaul.rpc.connections.InternetNodesEntr"
  "y\"%\n\022InternetNodesEntry\022\017\n\007address\030\001 \001(\t"
  "*k\n\004Info\022\013\n\007REQUEST\020\000\022\017\n\013ADD_SUCCESS\020\001\022\025"
  "\n\021ADD_ERROR_INVALID\020\002\022\022\n\016REMOVE_SUCCESS\020"
  "\005\022\032\n\026REMOVE_ERROR_NOT_FOUND\020\006b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_connections_2fconnections_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_connections_2fconnections_2eproto = {
    false, false, 677, descriptor_table_protodef_connections_2fconnections_2eproto,
    "connections/connections.proto",
    &descriptor_table_connections_2fconnections_2eproto_once, nullptr, 0, 4,
    schemas, file_default_instances, TableStruct_connections_2fconnections_2eproto::offsets,
    file_level_metadata_connections_2fconnections_2eproto, file_level_enum_descriptors_connections_2fconnections_2eproto,
    file_level_service_descriptors_connections_2fconnections_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_connections_2fconnections_2eproto_getter() {
  return &descriptor_table_connections_2fconnections_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_connections_2fconnections_2eproto(&descriptor_table_connections_2fconnections_2eproto);
namespace qaul {
namespace rpc {
namespace connections {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Info_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_connections_2fconnections_2eproto);
  return file_level_enum_descriptors_connections_2fconnections_2eproto[0];
}
bool Info_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class Connections::_Internal {
 public:
  static const ::qaul::rpc::connections::InternetNodesRequest& internet_nodes_request(const Connections* msg);
  static const ::qaul::rpc::connections::InternetNodesList& internet_nodes_list(const Connections* msg);
  static const ::qaul::rpc::connections::InternetNodesEntry& internet_nodes_add(const Connections* msg);
  static const ::qaul::rpc::connections::InternetNodesEntry& internet_nodes_remove(const Connections* msg);
};

const ::qaul::rpc::connections::InternetNodesRequest&
Connections::_Internal::internet_nodes_request(const Connections* msg) {
  return *msg->message_.internet_nodes_request_;
}
const ::qaul::rpc::connections::InternetNodesList&
Connections::_Internal::internet_nodes_list(const Connections* msg) {
  return *msg->message_.internet_nodes_list_;
}
const ::qaul::rpc::connections::InternetNodesEntry&
Connections::_Internal::internet_nodes_add(const Connections* msg) {
  return *msg->message_.internet_nodes_add_;
}
const ::qaul::rpc::connections::InternetNodesEntry&
Connections::_Internal::internet_nodes_remove(const Connections* msg) {
  return *msg->message_.internet_nodes_remove_;
}
void Connections::set_allocated_internet_nodes_request(::qaul::rpc::connections::InternetNodesRequest* internet_nodes_request) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (internet_nodes_request) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(internet_nodes_request);
    if (message_arena != submessage_arena) {
      internet_nodes_request = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, internet_nodes_request, submessage_arena);
    }
    set_has_internet_nodes_request();
    message_.internet_nodes_request_ = internet_nodes_request;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.connections.Connections.internet_nodes_request)
}
void Connections::set_allocated_internet_nodes_list(::qaul::rpc::connections::InternetNodesList* internet_nodes_list) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (internet_nodes_list) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(internet_nodes_list);
    if (message_arena != submessage_arena) {
      internet_nodes_list = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, internet_nodes_list, submessage_arena);
    }
    set_has_internet_nodes_list();
    message_.internet_nodes_list_ = internet_nodes_list;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.connections.Connections.internet_nodes_list)
}
void Connections::set_allocated_internet_nodes_add(::qaul::rpc::connections::InternetNodesEntry* internet_nodes_add) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (internet_nodes_add) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(internet_nodes_add);
    if (message_arena != submessage_arena) {
      internet_nodes_add = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, internet_nodes_add, submessage_arena);
    }
    set_has_internet_nodes_add();
    message_.internet_nodes_add_ = internet_nodes_add;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.connections.Connections.internet_nodes_add)
}
void Connections::set_allocated_internet_nodes_remove(::qaul::rpc::connections::InternetNodesEntry* internet_nodes_remove) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaForAllocation();
  clear_message();
  if (internet_nodes_remove) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::InternalGetOwningArena(internet_nodes_remove);
    if (message_arena != submessage_arena) {
      internet_nodes_remove = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, internet_nodes_remove, submessage_arena);
    }
    set_has_internet_nodes_remove();
    message_.internet_nodes_remove_ = internet_nodes_remove;
  }
  // @@protoc_insertion_point(field_set_allocated:qaul.rpc.connections.Connections.internet_nodes_remove)
}
Connections::Connections(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.connections.Connections)
}
Connections::Connections(const Connections& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kInternetNodesRequest: {
      _internal_mutable_internet_nodes_request()->::qaul::rpc::connections::InternetNodesRequest::MergeFrom(from._internal_internet_nodes_request());
      break;
    }
    case kInternetNodesList: {
      _internal_mutable_internet_nodes_list()->::qaul::rpc::connections::InternetNodesList::MergeFrom(from._internal_internet_nodes_list());
      break;
    }
    case kInternetNodesAdd: {
      _internal_mutable_internet_nodes_add()->::qaul::rpc::connections::InternetNodesEntry::MergeFrom(from._internal_internet_nodes_add());
      break;
    }
    case kInternetNodesRemove: {
      _internal_mutable_internet_nodes_remove()->::qaul::rpc::connections::InternetNodesEntry::MergeFrom(from._internal_internet_nodes_remove());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.connections.Connections)
}

inline void Connections::SharedCtor() {
clear_has_message();
}

Connections::~Connections() {
  // @@protoc_insertion_point(destructor:qaul.rpc.connections.Connections)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Connections::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_message()) {
    clear_message();
  }
}

void Connections::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void Connections::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:qaul.rpc.connections.Connections)
  switch (message_case()) {
    case kInternetNodesRequest: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.internet_nodes_request_;
      }
      break;
    }
    case kInternetNodesList: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.internet_nodes_list_;
      }
      break;
    }
    case kInternetNodesAdd: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.internet_nodes_add_;
      }
      break;
    }
    case kInternetNodesRemove: {
      if (GetArenaForAllocation() == nullptr) {
        delete message_.internet_nodes_remove_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void Connections::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.connections.Connections)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Connections::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_internet_nodes_request(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_internet_nodes_list(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_internet_nodes_add(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_internet_nodes_remove(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Connections::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.connections.Connections)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;
  if (_internal_has_internet_nodes_request()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::internet_nodes_request(this),
        _Internal::internet_nodes_request(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;
  if (_internal_has_internet_nodes_list()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::internet_nodes_list(this),
        _Internal::internet_nodes_list(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;
  if (_internal_has_internet_nodes_add()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::internet_nodes_add(this),
        _Internal::internet_nodes_add(this).GetCachedSize(), target, stream);
  }

  // .qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;
  if (_internal_has_internet_nodes_remove()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::internet_nodes_remove(this),
        _Internal::internet_nodes_remove(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.connections.Connections)
  return target;
}

size_t Connections::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.connections.Connections)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (message_case()) {
    // .qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;
    case kInternetNodesRequest: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.internet_nodes_request_);
      break;
    }
    // .qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;
    case kInternetNodesList: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.internet_nodes_list_);
      break;
    }
    // .qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;
    case kInternetNodesAdd: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.internet_nodes_add_);
      break;
    }
    // .qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;
    case kInternetNodesRemove: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.internet_nodes_remove_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Connections::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    Connections::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Connections::GetClassData() const { return &_class_data_; }

void Connections::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<Connections *>(to)->MergeFrom(
      static_cast<const Connections &>(from));
}


void Connections::MergeFrom(const Connections& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.connections.Connections)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kInternetNodesRequest: {
      _internal_mutable_internet_nodes_request()->::qaul::rpc::connections::InternetNodesRequest::MergeFrom(from._internal_internet_nodes_request());
      break;
    }
    case kInternetNodesList: {
      _internal_mutable_internet_nodes_list()->::qaul::rpc::connections::InternetNodesList::MergeFrom(from._internal_internet_nodes_list());
      break;
    }
    case kInternetNodesAdd: {
      _internal_mutable_internet_nodes_add()->::qaul::rpc::connections::InternetNodesEntry::MergeFrom(from._internal_internet_nodes_add());
      break;
    }
    case kInternetNodesRemove: {
      _internal_mutable_internet_nodes_remove()->::qaul::rpc::connections::InternetNodesEntry::MergeFrom(from._internal_internet_nodes_remove());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Connections::CopyFrom(const Connections& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.connections.Connections)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Connections::IsInitialized() const {
  return true;
}

void Connections::InternalSwap(Connections* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Connections::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fconnections_2eproto_getter, &descriptor_table_connections_2fconnections_2eproto_once,
      file_level_metadata_connections_2fconnections_2eproto[0]);
}

// ===================================================================

class InternetNodesRequest::_Internal {
 public:
};

InternetNodesRequest::InternetNodesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.connections.InternetNodesRequest)
}
InternetNodesRequest::InternetNodesRequest(const InternetNodesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.connections.InternetNodesRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InternetNodesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InternetNodesRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata InternetNodesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fconnections_2eproto_getter, &descriptor_table_connections_2fconnections_2eproto_once,
      file_level_metadata_connections_2fconnections_2eproto[1]);
}

// ===================================================================

class InternetNodesList::_Internal {
 public:
};

InternetNodesList::InternetNodesList(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned),
  nodes_(arena) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.connections.InternetNodesList)
}
InternetNodesList::InternetNodesList(const InternetNodesList& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      nodes_(from.nodes_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  info_ = from.info_;
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.connections.InternetNodesList)
}

inline void InternetNodesList::SharedCtor() {
info_ = 0;
}

InternetNodesList::~InternetNodesList() {
  // @@protoc_insertion_point(destructor:qaul.rpc.connections.InternetNodesList)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InternetNodesList::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void InternetNodesList::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InternetNodesList::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.connections.InternetNodesList)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  nodes_.Clear();
  info_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InternetNodesList::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .qaul.rpc.connections.Info info = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_info(static_cast<::qaul::rpc::connections::Info>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .qaul.rpc.connections.InternetNodesEntry nodes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_nodes(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InternetNodesList::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.connections.InternetNodesList)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .qaul.rpc.connections.Info info = 1;
  if (this->_internal_info() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      1, this->_internal_info(), target);
  }

  // repeated .qaul.rpc.connections.InternetNodesEntry nodes = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_nodes_size()); i < n; i++) {
    const auto& repfield = this->_internal_nodes(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.connections.InternetNodesList)
  return target;
}

size_t InternetNodesList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.connections.InternetNodesList)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .qaul.rpc.connections.InternetNodesEntry nodes = 2;
  total_size += 1UL * this->_internal_nodes_size();
  for (const auto& msg : this->nodes_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .qaul.rpc.connections.Info info = 1;
  if (this->_internal_info() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_info());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InternetNodesList::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InternetNodesList::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InternetNodesList::GetClassData() const { return &_class_data_; }

void InternetNodesList::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InternetNodesList *>(to)->MergeFrom(
      static_cast<const InternetNodesList &>(from));
}


void InternetNodesList::MergeFrom(const InternetNodesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.connections.InternetNodesList)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  nodes_.MergeFrom(from.nodes_);
  if (from._internal_info() != 0) {
    _internal_set_info(from._internal_info());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InternetNodesList::CopyFrom(const InternetNodesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.connections.InternetNodesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternetNodesList::IsInitialized() const {
  return true;
}

void InternetNodesList::InternalSwap(InternetNodesList* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  nodes_.InternalSwap(&other->nodes_);
  swap(info_, other->info_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InternetNodesList::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fconnections_2eproto_getter, &descriptor_table_connections_2fconnections_2eproto_once,
      file_level_metadata_connections_2fconnections_2eproto[2]);
}

// ===================================================================

class InternetNodesEntry::_Internal {
 public:
};

InternetNodesEntry::InternetNodesEntry(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor();
  // @@protoc_insertion_point(arena_constructor:qaul.rpc.connections.InternetNodesEntry)
}
InternetNodesEntry::InternetNodesEntry(const InternetNodesEntry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  address_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    address_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_address().empty()) {
    address_.Set(from._internal_address(), 
      GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:qaul.rpc.connections.InternetNodesEntry)
}

inline void InternetNodesEntry::SharedCtor() {
address_.InitDefault();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  address_.Set("", GetArenaForAllocation());
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

InternetNodesEntry::~InternetNodesEntry() {
  // @@protoc_insertion_point(destructor:qaul.rpc.connections.InternetNodesEntry)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void InternetNodesEntry::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  address_.Destroy();
}

void InternetNodesEntry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}

void InternetNodesEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:qaul.rpc.connections.InternetNodesEntry)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* InternetNodesEntry::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string address = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_address();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "qaul.rpc.connections.InternetNodesEntry.address"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* InternetNodesEntry::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:qaul.rpc.connections.InternetNodesEntry)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_address().data(), static_cast<int>(this->_internal_address().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "qaul.rpc.connections.InternetNodesEntry.address");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_address(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:qaul.rpc.connections.InternetNodesEntry)
  return target;
}

size_t InternetNodesEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:qaul.rpc.connections.InternetNodesEntry)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string address = 1;
  if (!this->_internal_address().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_address());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData InternetNodesEntry::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSizeCheck,
    InternetNodesEntry::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*InternetNodesEntry::GetClassData() const { return &_class_data_; }

void InternetNodesEntry::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to,
                      const ::PROTOBUF_NAMESPACE_ID::Message& from) {
  static_cast<InternetNodesEntry *>(to)->MergeFrom(
      static_cast<const InternetNodesEntry &>(from));
}


void InternetNodesEntry::MergeFrom(const InternetNodesEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:qaul.rpc.connections.InternetNodesEntry)
  GOOGLE_DCHECK_NE(&from, this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_address().empty()) {
    _internal_set_address(from._internal_address());
  }
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void InternetNodesEntry::CopyFrom(const InternetNodesEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:qaul.rpc.connections.InternetNodesEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InternetNodesEntry::IsInitialized() const {
  return true;
}

void InternetNodesEntry::InternalSwap(InternetNodesEntry* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &address_, lhs_arena,
      &other->address_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata InternetNodesEntry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_connections_2fconnections_2eproto_getter, &descriptor_table_connections_2fconnections_2eproto_once,
      file_level_metadata_connections_2fconnections_2eproto[3]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace connections
}  // namespace rpc
}  // namespace qaul
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::qaul::rpc::connections::Connections*
Arena::CreateMaybeMessage< ::qaul::rpc::connections::Connections >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::connections::Connections >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::connections::InternetNodesRequest*
Arena::CreateMaybeMessage< ::qaul::rpc::connections::InternetNodesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::connections::InternetNodesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::connections::InternetNodesList*
Arena::CreateMaybeMessage< ::qaul::rpc::connections::InternetNodesList >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::connections::InternetNodesList >(arena);
}
template<> PROTOBUF_NOINLINE ::qaul::rpc::connections::InternetNodesEntry*
Arena::CreateMaybeMessage< ::qaul::rpc::connections::InternetNodesEntry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::qaul::rpc::connections::InternetNodesEntry >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
