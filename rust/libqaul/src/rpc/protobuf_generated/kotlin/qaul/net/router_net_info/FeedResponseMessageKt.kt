// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: router/router_net_info.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.net.router_net_info;

@kotlin.jvm.JvmName("-initializefeedResponseMessage")
public inline fun feedResponseMessage(block: qaul.net.router_net_info.FeedResponseMessageKt.Dsl.() -> kotlin.Unit): qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage =
  qaul.net.router_net_info.FeedResponseMessageKt.Dsl._create(qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage.newBuilder()).apply { block() }._build()
/**
 * ```
 * Feed response message
 * ```
 *
 * Protobuf type `qaul.net.router_net_info.FeedResponseMessage`
 */
public object FeedResponseMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage = _builder.build()

    /**
     * ```
     * Feed table
     * ```
     *
     * `.qaul.net.router_net_info.FeedResponseTable feeds = 1;`
     */
    public var feeds: qaul.net.router_net_info.RouterNetInfo.FeedResponseTable
      @JvmName("getFeeds")
      get() = _builder.getFeeds()
      @JvmName("setFeeds")
      set(value) {
        _builder.setFeeds(value)
      }
    /**
     * ```
     * Feed table
     * ```
     *
     * `.qaul.net.router_net_info.FeedResponseTable feeds = 1;`
     */
    public fun clearFeeds() {
      _builder.clearFeeds()
    }
    /**
     * ```
     * Feed table
     * ```
     *
     * `.qaul.net.router_net_info.FeedResponseTable feeds = 1;`
     * @return Whether the feeds field is set.
     */
    public fun hasFeeds(): kotlin.Boolean {
      return _builder.hasFeeds()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage.copy(block: qaul.net.router_net_info.FeedResponseMessageKt.Dsl.() -> kotlin.Unit): qaul.net.router_net_info.RouterNetInfo.FeedResponseMessage =
  qaul.net.router_net_info.FeedResponseMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.net.router_net_info.RouterNetInfo.FeedResponseMessageOrBuilder.feedsOrNull: qaul.net.router_net_info.RouterNetInfo.FeedResponseTable?
  get() = if (hasFeeds()) getFeeds() else null

