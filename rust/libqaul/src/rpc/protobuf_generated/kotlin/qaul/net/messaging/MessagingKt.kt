//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/messaging/messaging.proto

package qaul.net.messaging;

@kotlin.jvm.JvmName("-initializemessaging")
inline fun messaging(block: qaul.net.messaging.MessagingKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.Messaging =
  qaul.net.messaging.MessagingKt.Dsl._create(qaul.net.messaging.MessagingOuterClass.Messaging.newBuilder()).apply { block() }._build()
object MessagingKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: qaul.net.messaging.MessagingOuterClass.Messaging.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.messaging.MessagingOuterClass.Messaging.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.messaging.MessagingOuterClass.Messaging = _builder.build()

    /**
     * <pre>
     * confirm chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.Confirmation confirmation_message = 1;</code>
     */
    var confirmationMessage: qaul.net.messaging.MessagingOuterClass.Confirmation
      @JvmName("getConfirmationMessage")
      get() = _builder.getConfirmationMessage()
      @JvmName("setConfirmationMessage")
      set(value) {
        _builder.setConfirmationMessage(value)
      }
    /**
     * <pre>
     * confirm chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.Confirmation confirmation_message = 1;</code>
     */
    fun clearConfirmationMessage() {
      _builder.clearConfirmationMessage()
    }
    /**
     * <pre>
     * confirm chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.Confirmation confirmation_message = 1;</code>
     * @return Whether the confirmationMessage field is set.
     */
    fun hasConfirmationMessage(): kotlin.Boolean {
      return _builder.hasConfirmationMessage()
    }

    /**
     * <pre>
     * crypto service
     * </pre>
     *
     * <code>.qaul.net.messaging.CryptoService crypto_service = 2;</code>
     */
    var cryptoService: qaul.net.messaging.MessagingOuterClass.CryptoService
      @JvmName("getCryptoService")
      get() = _builder.getCryptoService()
      @JvmName("setCryptoService")
      set(value) {
        _builder.setCryptoService(value)
      }
    /**
     * <pre>
     * crypto service
     * </pre>
     *
     * <code>.qaul.net.messaging.CryptoService crypto_service = 2;</code>
     */
    fun clearCryptoService() {
      _builder.clearCryptoService()
    }
    /**
     * <pre>
     * crypto service
     * </pre>
     *
     * <code>.qaul.net.messaging.CryptoService crypto_service = 2;</code>
     * @return Whether the cryptoService field is set.
     */
    fun hasCryptoService(): kotlin.Boolean {
      return _builder.hasCryptoService()
    }

    /**
     * <pre>
     * chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.ChatMessage chat_message = 3;</code>
     */
    var chatMessage: qaul.net.messaging.MessagingOuterClass.ChatMessage
      @JvmName("getChatMessage")
      get() = _builder.getChatMessage()
      @JvmName("setChatMessage")
      set(value) {
        _builder.setChatMessage(value)
      }
    /**
     * <pre>
     * chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.ChatMessage chat_message = 3;</code>
     */
    fun clearChatMessage() {
      _builder.clearChatMessage()
    }
    /**
     * <pre>
     * chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.ChatMessage chat_message = 3;</code>
     * @return Whether the chatMessage field is set.
     */
    fun hasChatMessage(): kotlin.Boolean {
      return _builder.hasChatMessage()
    }

    /**
     * <pre>
     * file sharing message
     * </pre>
     *
     * <code>.qaul.net.messaging.FileMessage file_message = 4;</code>
     */
    var fileMessage: qaul.net.messaging.MessagingOuterClass.FileMessage
      @JvmName("getFileMessage")
      get() = _builder.getFileMessage()
      @JvmName("setFileMessage")
      set(value) {
        _builder.setFileMessage(value)
      }
    /**
     * <pre>
     * file sharing message
     * </pre>
     *
     * <code>.qaul.net.messaging.FileMessage file_message = 4;</code>
     */
    fun clearFileMessage() {
      _builder.clearFileMessage()
    }
    /**
     * <pre>
     * file sharing message
     * </pre>
     *
     * <code>.qaul.net.messaging.FileMessage file_message = 4;</code>
     * @return Whether the fileMessage field is set.
     */
    fun hasFileMessage(): kotlin.Boolean {
      return _builder.hasFileMessage()
    }

    /**
     * <pre>
     * group chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.GroupChatMessage group_chat_message = 5;</code>
     */
    var groupChatMessage: qaul.net.messaging.MessagingOuterClass.GroupChatMessage
      @JvmName("getGroupChatMessage")
      get() = _builder.getGroupChatMessage()
      @JvmName("setGroupChatMessage")
      set(value) {
        _builder.setGroupChatMessage(value)
      }
    /**
     * <pre>
     * group chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.GroupChatMessage group_chat_message = 5;</code>
     */
    fun clearGroupChatMessage() {
      _builder.clearGroupChatMessage()
    }
    /**
     * <pre>
     * group chat message
     * </pre>
     *
     * <code>.qaul.net.messaging.GroupChatMessage group_chat_message = 5;</code>
     * @return Whether the groupChatMessage field is set.
     */
    fun hasGroupChatMessage(): kotlin.Boolean {
      return _builder.hasGroupChatMessage()
    }

    /**
     * <pre>
     * rtc message
     * </pre>
     *
     * <code>.qaul.net.messaging.RtcMessage rtc_message = 6;</code>
     */
    var rtcMessage: qaul.net.messaging.MessagingOuterClass.RtcMessage
      @JvmName("getRtcMessage")
      get() = _builder.getRtcMessage()
      @JvmName("setRtcMessage")
      set(value) {
        _builder.setRtcMessage(value)
      }
    /**
     * <pre>
     * rtc message
     * </pre>
     *
     * <code>.qaul.net.messaging.RtcMessage rtc_message = 6;</code>
     */
    fun clearRtcMessage() {
      _builder.clearRtcMessage()
    }
    /**
     * <pre>
     * rtc message
     * </pre>
     *
     * <code>.qaul.net.messaging.RtcMessage rtc_message = 6;</code>
     * @return Whether the rtcMessage field is set.
     */
    fun hasRtcMessage(): kotlin.Boolean {
      return _builder.hasRtcMessage()
    }
    val messageCase: qaul.net.messaging.MessagingOuterClass.Messaging.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
inline fun qaul.net.messaging.MessagingOuterClass.Messaging.copy(block: qaul.net.messaging.MessagingKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.Messaging =
  qaul.net.messaging.MessagingKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.net.messaging.MessagingOuterClass.MessagingOrBuilder.confirmationMessageOrNull: qaul.net.messaging.MessagingOuterClass.Confirmation?
  get() = if (hasConfirmationMessage()) getConfirmationMessage() else null

val qaul.net.messaging.MessagingOuterClass.MessagingOrBuilder.cryptoServiceOrNull: qaul.net.messaging.MessagingOuterClass.CryptoService?
  get() = if (hasCryptoService()) getCryptoService() else null

val qaul.net.messaging.MessagingOuterClass.MessagingOrBuilder.chatMessageOrNull: qaul.net.messaging.MessagingOuterClass.ChatMessage?
  get() = if (hasChatMessage()) getChatMessage() else null

val qaul.net.messaging.MessagingOuterClass.MessagingOrBuilder.fileMessageOrNull: qaul.net.messaging.MessagingOuterClass.FileMessage?
  get() = if (hasFileMessage()) getFileMessage() else null

val qaul.net.messaging.MessagingOuterClass.MessagingOrBuilder.groupChatMessageOrNull: qaul.net.messaging.MessagingOuterClass.GroupChatMessage?
  get() = if (hasGroupChatMessage()) getGroupChatMessage() else null

val qaul.net.messaging.MessagingOuterClass.MessagingOrBuilder.rtcMessageOrNull: qaul.net.messaging.MessagingOuterClass.RtcMessage?
  get() = if (hasRtcMessage()) getRtcMessage() else null

