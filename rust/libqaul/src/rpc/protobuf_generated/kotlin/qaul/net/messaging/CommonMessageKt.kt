// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/messaging/messaging.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.net.messaging;

@kotlin.jvm.JvmName("-initializecommonMessage")
public inline fun commonMessage(block: qaul.net.messaging.CommonMessageKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.CommonMessage =
  qaul.net.messaging.CommonMessageKt.Dsl._create(qaul.net.messaging.MessagingOuterClass.CommonMessage.newBuilder()).apply { block() }._build()
/**
 * ```
 * common message
 * ```
 *
 * Protobuf type `qaul.net.messaging.CommonMessage`
 */
public object CommonMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.net.messaging.MessagingOuterClass.CommonMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.messaging.MessagingOuterClass.CommonMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.messaging.MessagingOuterClass.CommonMessage = _builder.build()

    /**
     * ```
     * message ID
     * ```
     *
     * `bytes message_id = 1;`
     */
    public var messageId: com.google.protobuf.ByteString
      @JvmName("getMessageId")
      get() = _builder.getMessageId()
      @JvmName("setMessageId")
      set(value) {
        _builder.setMessageId(value)
      }
    /**
     * ```
     * message ID
     * ```
     *
     * `bytes message_id = 1;`
     */
    public fun clearMessageId() {
      _builder.clearMessageId()
    }

    /**
     * ```
     * group id
     * ```
     *
     * `bytes group_id = 2;`
     */
    public var groupId: com.google.protobuf.ByteString
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * ```
     * group id
     * ```
     *
     * `bytes group_id = 2;`
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }

    /**
     * ```
     * sent at timestamp
     * ```
     *
     * `uint64 sent_at = 3;`
     */
    public var sentAt: kotlin.Long
      @JvmName("getSentAt")
      get() = _builder.getSentAt()
      @JvmName("setSentAt")
      set(value) {
        _builder.setSentAt(value)
      }
    /**
     * ```
     * sent at timestamp
     * ```
     *
     * `uint64 sent_at = 3;`
     */
    public fun clearSentAt() {
      _builder.clearSentAt()
    }

    /**
     * ```
     * chat message
     * ```
     *
     * `.qaul.net.messaging.ChatMessage chat_message = 4;`
     */
    public var chatMessage: qaul.net.messaging.MessagingOuterClass.ChatMessage
      @JvmName("getChatMessage")
      get() = _builder.getChatMessage()
      @JvmName("setChatMessage")
      set(value) {
        _builder.setChatMessage(value)
      }
    /**
     * ```
     * chat message
     * ```
     *
     * `.qaul.net.messaging.ChatMessage chat_message = 4;`
     */
    public fun clearChatMessage() {
      _builder.clearChatMessage()
    }
    /**
     * ```
     * chat message
     * ```
     *
     * `.qaul.net.messaging.ChatMessage chat_message = 4;`
     * @return Whether the chatMessage field is set.
     */
    public fun hasChatMessage(): kotlin.Boolean {
      return _builder.hasChatMessage()
    }

    /**
     * ```
     * file message
     * ```
     *
     * `.qaul.net.messaging.FileMessage file_message = 5;`
     */
    public var fileMessage: qaul.net.messaging.MessagingOuterClass.FileMessage
      @JvmName("getFileMessage")
      get() = _builder.getFileMessage()
      @JvmName("setFileMessage")
      set(value) {
        _builder.setFileMessage(value)
      }
    /**
     * ```
     * file message
     * ```
     *
     * `.qaul.net.messaging.FileMessage file_message = 5;`
     */
    public fun clearFileMessage() {
      _builder.clearFileMessage()
    }
    /**
     * ```
     * file message
     * ```
     *
     * `.qaul.net.messaging.FileMessage file_message = 5;`
     * @return Whether the fileMessage field is set.
     */
    public fun hasFileMessage(): kotlin.Boolean {
      return _builder.hasFileMessage()
    }

    /**
     * ```
     * group message
     * ```
     *
     * `.qaul.net.messaging.GroupMessage group_message = 6;`
     */
    public var groupMessage: qaul.net.messaging.MessagingOuterClass.GroupMessage
      @JvmName("getGroupMessage")
      get() = _builder.getGroupMessage()
      @JvmName("setGroupMessage")
      set(value) {
        _builder.setGroupMessage(value)
      }
    /**
     * ```
     * group message
     * ```
     *
     * `.qaul.net.messaging.GroupMessage group_message = 6;`
     */
    public fun clearGroupMessage() {
      _builder.clearGroupMessage()
    }
    /**
     * ```
     * group message
     * ```
     *
     * `.qaul.net.messaging.GroupMessage group_message = 6;`
     * @return Whether the groupMessage field is set.
     */
    public fun hasGroupMessage(): kotlin.Boolean {
      return _builder.hasGroupMessage()
    }

    /**
     * ```
     * rtc message
     * ```
     *
     * `.qaul.net.messaging.RtcMessage rtc_message = 7;`
     */
    public var rtcMessage: qaul.net.messaging.MessagingOuterClass.RtcMessage
      @JvmName("getRtcMessage")
      get() = _builder.getRtcMessage()
      @JvmName("setRtcMessage")
      set(value) {
        _builder.setRtcMessage(value)
      }
    /**
     * ```
     * rtc message
     * ```
     *
     * `.qaul.net.messaging.RtcMessage rtc_message = 7;`
     */
    public fun clearRtcMessage() {
      _builder.clearRtcMessage()
    }
    /**
     * ```
     * rtc message
     * ```
     *
     * `.qaul.net.messaging.RtcMessage rtc_message = 7;`
     * @return Whether the rtcMessage field is set.
     */
    public fun hasRtcMessage(): kotlin.Boolean {
      return _builder.hasRtcMessage()
    }
    public val payloadCase: qaul.net.messaging.MessagingOuterClass.CommonMessage.PayloadCase
      @JvmName("getPayloadCase")
      get() = _builder.getPayloadCase()

    public fun clearPayload() {
      _builder.clearPayload()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.net.messaging.MessagingOuterClass.CommonMessage.copy(block: qaul.net.messaging.CommonMessageKt.Dsl.() -> kotlin.Unit): qaul.net.messaging.MessagingOuterClass.CommonMessage =
  qaul.net.messaging.CommonMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.net.messaging.MessagingOuterClass.CommonMessageOrBuilder.chatMessageOrNull: qaul.net.messaging.MessagingOuterClass.ChatMessage?
  get() = if (hasChatMessage()) getChatMessage() else null

public val qaul.net.messaging.MessagingOuterClass.CommonMessageOrBuilder.fileMessageOrNull: qaul.net.messaging.MessagingOuterClass.FileMessage?
  get() = if (hasFileMessage()) getFileMessage() else null

public val qaul.net.messaging.MessagingOuterClass.CommonMessageOrBuilder.groupMessageOrNull: qaul.net.messaging.MessagingOuterClass.GroupMessage?
  get() = if (hasGroupMessage()) getGroupMessage() else null

public val qaul.net.messaging.MessagingOuterClass.CommonMessageOrBuilder.rtcMessageOrNull: qaul.net.messaging.MessagingOuterClass.RtcMessage?
  get() = if (hasRtcMessage()) getRtcMessage() else null

