// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/chat/chatfile_net.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.net.chatfile;

@kotlin.jvm.JvmName("-initializechatFileContainer")
public inline fun chatFileContainer(block: qaul.net.chatfile.ChatFileContainerKt.Dsl.() -> kotlin.Unit): qaul.net.chatfile.ChatfileNet.ChatFileContainer =
  qaul.net.chatfile.ChatFileContainerKt.Dsl._create(qaul.net.chatfile.ChatfileNet.ChatFileContainer.newBuilder()).apply { block() }._build()
/**
 * ```
 * Chat file sending container
 * ```
 *
 * Protobuf type `qaul.net.chatfile.ChatFileContainer`
 */
public object ChatFileContainerKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.net.chatfile.ChatfileNet.ChatFileContainer.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.net.chatfile.ChatfileNet.ChatFileContainer.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.net.chatfile.ChatfileNet.ChatFileContainer = _builder.build()

    /**
     * ```
     * Chat File Info Message
     * ```
     *
     * `.qaul.net.chatfile.ChatFileInfo file_info = 1;`
     */
    public var fileInfo: qaul.net.chatfile.ChatfileNet.ChatFileInfo
      @JvmName("getFileInfo")
      get() = _builder.getFileInfo()
      @JvmName("setFileInfo")
      set(value) {
        _builder.setFileInfo(value)
      }
    /**
     * ```
     * Chat File Info Message
     * ```
     *
     * `.qaul.net.chatfile.ChatFileInfo file_info = 1;`
     */
    public fun clearFileInfo() {
      _builder.clearFileInfo()
    }
    /**
     * ```
     * Chat File Info Message
     * ```
     *
     * `.qaul.net.chatfile.ChatFileInfo file_info = 1;`
     * @return Whether the fileInfo field is set.
     */
    public fun hasFileInfo(): kotlin.Boolean {
      return _builder.hasFileInfo()
    }

    /**
     * ```
     * Chat File Data Message
     * ```
     *
     * `.qaul.net.chatfile.ChatFileData file_data = 2;`
     */
    public var fileData: qaul.net.chatfile.ChatfileNet.ChatFileData
      @JvmName("getFileData")
      get() = _builder.getFileData()
      @JvmName("setFileData")
      set(value) {
        _builder.setFileData(value)
      }
    /**
     * ```
     * Chat File Data Message
     * ```
     *
     * `.qaul.net.chatfile.ChatFileData file_data = 2;`
     */
    public fun clearFileData() {
      _builder.clearFileData()
    }
    /**
     * ```
     * Chat File Data Message
     * ```
     *
     * `.qaul.net.chatfile.ChatFileData file_data = 2;`
     * @return Whether the fileData field is set.
     */
    public fun hasFileData(): kotlin.Boolean {
      return _builder.hasFileData()
    }
    public val messageCase: qaul.net.chatfile.ChatfileNet.ChatFileContainer.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.net.chatfile.ChatfileNet.ChatFileContainer.copy(block: qaul.net.chatfile.ChatFileContainerKt.Dsl.() -> kotlin.Unit): qaul.net.chatfile.ChatfileNet.ChatFileContainer =
  qaul.net.chatfile.ChatFileContainerKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.net.chatfile.ChatfileNet.ChatFileContainerOrBuilder.fileInfoOrNull: qaul.net.chatfile.ChatfileNet.ChatFileInfo?
  get() = if (hasFileInfo()) getFileInfo() else null

public val qaul.net.chatfile.ChatfileNet.ChatFileContainerOrBuilder.fileDataOrNull: qaul.net.chatfile.ChatfileNet.ChatFileData?
  get() = if (hasFileData()) getFileData() else null

