// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: rpc/qaul_rpc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc;

@kotlin.jvm.JvmName("-initializeqaulRpc")
public inline fun qaulRpc(block: qaul.rpc.QaulRpcKt.Dsl.() -> kotlin.Unit): qaul.rpc.QaulRpcOuterClass.QaulRpc =
  qaul.rpc.QaulRpcKt.Dsl._create(qaul.rpc.QaulRpcOuterClass.QaulRpc.newBuilder()).apply { block() }._build()
/**
 * ```
 * The main libqaul RPC message container.
 * All RPC messages from and to libqaul are packed
 * into this container.
 * ```
 *
 * Protobuf type `qaul.rpc.QaulRpc`
 */
public object QaulRpcKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.QaulRpcOuterClass.QaulRpc.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.QaulRpcOuterClass.QaulRpc.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.QaulRpcOuterClass.QaulRpc = _builder.build()

    /**
     * ```
     * which module to approach
     * ```
     *
     * `.qaul.rpc.Modules module = 1;`
     */
    public var module: qaul.rpc.QaulRpcOuterClass.Modules
      @JvmName("getModule")
      get() = _builder.getModule()
      @JvmName("setModule")
      set(value) {
        _builder.setModule(value)
      }
    public var moduleValue: kotlin.Int
      @JvmName("getModuleValue")
      get() = _builder.getModuleValue()
      @JvmName("setModuleValue")
      set(value) {
        _builder.setModuleValue(value)
      }
    /**
     * ```
     * which module to approach
     * ```
     *
     * `.qaul.rpc.Modules module = 1;`
     */
    public fun clearModule() {
      _builder.clearModule()
    }

    /**
     * ```
     * can be used to identify responses
     * ```
     *
     * `string request_id = 2;`
     */
    public var requestId: kotlin.String
      @JvmName("getRequestId")
      get() = _builder.getRequestId()
      @JvmName("setRequestId")
      set(value) {
        _builder.setRequestId(value)
      }
    /**
     * ```
     * can be used to identify responses
     * ```
     *
     * `string request_id = 2;`
     */
    public fun clearRequestId() {
      _builder.clearRequestId()
    }

    /**
     * ```
     * authorisation
     * binary user id
     * ```
     *
     * `bytes user_id = 3;`
     */
    public var userId: com.google.protobuf.ByteString
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * ```
     * authorisation
     * binary user id
     * ```
     *
     * `bytes user_id = 3;`
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }

    /**
     * ```
     * the protobuf encoded binary message data
     * which is passed to the module.
     * ```
     *
     * `bytes data = 4;`
     */
    public var data: com.google.protobuf.ByteString
      @JvmName("getData")
      get() = _builder.getData()
      @JvmName("setData")
      set(value) {
        _builder.setData(value)
      }
    /**
     * ```
     * the protobuf encoded binary message data
     * which is passed to the module.
     * ```
     *
     * `bytes data = 4;`
     */
    public fun clearData() {
      _builder.clearData()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.QaulRpcOuterClass.QaulRpc.copy(block: qaul.rpc.QaulRpcKt.Dsl.() -> kotlin.Unit): qaul.rpc.QaulRpcOuterClass.QaulRpc =
  qaul.rpc.QaulRpcKt.Dsl._create(this.toBuilder()).apply { block() }._build()

