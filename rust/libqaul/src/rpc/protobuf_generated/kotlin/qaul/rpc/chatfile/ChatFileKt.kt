// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/chat/chatfile_rpc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.chatfile;

@kotlin.jvm.JvmName("-initializechatFile")
public inline fun chatFile(block: qaul.rpc.chatfile.ChatFileKt.Dsl.() -> kotlin.Unit): qaul.rpc.chatfile.ChatfileRpc.ChatFile =
  qaul.rpc.chatfile.ChatFileKt.Dsl._create(qaul.rpc.chatfile.ChatfileRpc.ChatFile.newBuilder()).apply { block() }._build()
/**
 * ```
 * Chat file RPC message container
 * ```
 *
 * Protobuf type `qaul.rpc.chatfile.ChatFile`
 */
public object ChatFileKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.chatfile.ChatfileRpc.ChatFile.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.chatfile.ChatfileRpc.ChatFile.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.chatfile.ChatfileRpc.ChatFile = _builder.build()

    /**
     * ```
     * send file request
     *
     * this messages sends a file from UI to libqaul
     * ```
     *
     * `.qaul.rpc.chatfile.SendFileRequest send_file_request = 1;`
     */
    public var sendFileRequest: qaul.rpc.chatfile.ChatfileRpc.SendFileRequest
      @JvmName("getSendFileRequest")
      get() = _builder.getSendFileRequest()
      @JvmName("setSendFileRequest")
      set(value) {
        _builder.setSendFileRequest(value)
      }
    /**
     * ```
     * send file request
     *
     * this messages sends a file from UI to libqaul
     * ```
     *
     * `.qaul.rpc.chatfile.SendFileRequest send_file_request = 1;`
     */
    public fun clearSendFileRequest() {
      _builder.clearSendFileRequest()
    }
    /**
     * ```
     * send file request
     *
     * this messages sends a file from UI to libqaul
     * ```
     *
     * `.qaul.rpc.chatfile.SendFileRequest send_file_request = 1;`
     * @return Whether the sendFileRequest field is set.
     */
    public fun hasSendFileRequest(): kotlin.Boolean {
      return _builder.hasSendFileRequest()
    }

    /**
     * ```
     * send file response
     *
     * response message from libqaul to the UI about
     * the result of the send file request
     * ```
     *
     * `.qaul.rpc.chatfile.SendFileResponse send_file_response = 2;`
     */
    public var sendFileResponse: qaul.rpc.chatfile.ChatfileRpc.SendFileResponse
      @JvmName("getSendFileResponse")
      get() = _builder.getSendFileResponse()
      @JvmName("setSendFileResponse")
      set(value) {
        _builder.setSendFileResponse(value)
      }
    /**
     * ```
     * send file response
     *
     * response message from libqaul to the UI about
     * the result of the send file request
     * ```
     *
     * `.qaul.rpc.chatfile.SendFileResponse send_file_response = 2;`
     */
    public fun clearSendFileResponse() {
      _builder.clearSendFileResponse()
    }
    /**
     * ```
     * send file response
     *
     * response message from libqaul to the UI about
     * the result of the send file request
     * ```
     *
     * `.qaul.rpc.chatfile.SendFileResponse send_file_response = 2;`
     * @return Whether the sendFileResponse field is set.
     */
    public fun hasSendFileResponse(): kotlin.Boolean {
      return _builder.hasSendFileResponse()
    }

    /**
     * ```
     * file history request
     *
     * request a paginated list of
     * ```
     *
     * `.qaul.rpc.chatfile.FileHistoryRequest file_history = 3;`
     */
    public var fileHistory: qaul.rpc.chatfile.ChatfileRpc.FileHistoryRequest
      @JvmName("getFileHistory")
      get() = _builder.getFileHistory()
      @JvmName("setFileHistory")
      set(value) {
        _builder.setFileHistory(value)
      }
    /**
     * ```
     * file history request
     *
     * request a paginated list of
     * ```
     *
     * `.qaul.rpc.chatfile.FileHistoryRequest file_history = 3;`
     */
    public fun clearFileHistory() {
      _builder.clearFileHistory()
    }
    /**
     * ```
     * file history request
     *
     * request a paginated list of
     * ```
     *
     * `.qaul.rpc.chatfile.FileHistoryRequest file_history = 3;`
     * @return Whether the fileHistory field is set.
     */
    public fun hasFileHistory(): kotlin.Boolean {
      return _builder.hasFileHistory()
    }

    /**
     * ```
     * file history response
     *
     * delivers the requested list of
     * ```
     *
     * `.qaul.rpc.chatfile.FileHistoryResponse file_history_response = 4;`
     */
    public var fileHistoryResponse: qaul.rpc.chatfile.ChatfileRpc.FileHistoryResponse
      @JvmName("getFileHistoryResponse")
      get() = _builder.getFileHistoryResponse()
      @JvmName("setFileHistoryResponse")
      set(value) {
        _builder.setFileHistoryResponse(value)
      }
    /**
     * ```
     * file history response
     *
     * delivers the requested list of
     * ```
     *
     * `.qaul.rpc.chatfile.FileHistoryResponse file_history_response = 4;`
     */
    public fun clearFileHistoryResponse() {
      _builder.clearFileHistoryResponse()
    }
    /**
     * ```
     * file history response
     *
     * delivers the requested list of
     * ```
     *
     * `.qaul.rpc.chatfile.FileHistoryResponse file_history_response = 4;`
     * @return Whether the fileHistoryResponse field is set.
     */
    public fun hasFileHistoryResponse(): kotlin.Boolean {
      return _builder.hasFileHistoryResponse()
    }
    public val messageCase: qaul.rpc.chatfile.ChatfileRpc.ChatFile.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.chatfile.ChatfileRpc.ChatFile.copy(block: qaul.rpc.chatfile.ChatFileKt.Dsl.() -> kotlin.Unit): qaul.rpc.chatfile.ChatfileRpc.ChatFile =
  qaul.rpc.chatfile.ChatFileKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.rpc.chatfile.ChatfileRpc.ChatFileOrBuilder.sendFileRequestOrNull: qaul.rpc.chatfile.ChatfileRpc.SendFileRequest?
  get() = if (hasSendFileRequest()) getSendFileRequest() else null

public val qaul.rpc.chatfile.ChatfileRpc.ChatFileOrBuilder.sendFileResponseOrNull: qaul.rpc.chatfile.ChatfileRpc.SendFileResponse?
  get() = if (hasSendFileResponse()) getSendFileResponse() else null

public val qaul.rpc.chatfile.ChatfileRpc.ChatFileOrBuilder.fileHistoryOrNull: qaul.rpc.chatfile.ChatfileRpc.FileHistoryRequest?
  get() = if (hasFileHistory()) getFileHistory() else null

public val qaul.rpc.chatfile.ChatfileRpc.ChatFileOrBuilder.fileHistoryResponseOrNull: qaul.rpc.chatfile.ChatfileRpc.FileHistoryResponse?
  get() = if (hasFileHistoryResponse()) getFileHistoryResponse() else null

