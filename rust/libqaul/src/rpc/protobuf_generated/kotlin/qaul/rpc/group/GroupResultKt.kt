// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/group/group_rpc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.group;

@kotlin.jvm.JvmName("-initializegroupResult")
public inline fun groupResult(block: qaul.rpc.group.GroupResultKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupResult =
  qaul.rpc.group.GroupResultKt.Dsl._create(qaul.rpc.group.GroupRpc.GroupResult.newBuilder()).apply { block() }._build()
/**
 * ```
 * Group Result
 * ```
 *
 * Protobuf type `qaul.rpc.group.GroupResult`
 */
public object GroupResultKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.group.GroupRpc.GroupResult.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.group.GroupRpc.GroupResult.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.group.GroupRpc.GroupResult = _builder.build()

    /**
     * ```
     * status
     *
     * true = success
     * false = an error happened
     *
     * if the result is false, the message will
     * contain the error message.
     * ```
     *
     * `bool status = 1;`
     */
    public var status: kotlin.Boolean
      @JvmName("getStatus")
      get() = _builder.getStatus()
      @JvmName("setStatus")
      set(value) {
        _builder.setStatus(value)
      }
    /**
     * ```
     * status
     *
     * true = success
     * false = an error happened
     *
     * if the result is false, the message will
     * contain the error message.
     * ```
     *
     * `bool status = 1;`
     */
    public fun clearStatus() {
      _builder.clearStatus()
    }

    /**
     * ```
     * message
     * ```
     *
     * `string message = 2;`
     */
    public var message: kotlin.String
      @JvmName("getMessage")
      get() = _builder.getMessage()
      @JvmName("setMessage")
      set(value) {
        _builder.setMessage(value)
      }
    /**
     * ```
     * message
     * ```
     *
     * `string message = 2;`
     */
    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.group.GroupRpc.GroupResult.copy(block: qaul.rpc.group.GroupResultKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupResult =
  qaul.rpc.group.GroupResultKt.Dsl._create(this.toBuilder()).apply { block() }._build()

