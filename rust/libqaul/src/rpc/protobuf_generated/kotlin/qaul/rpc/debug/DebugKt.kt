// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: rpc/debug.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.debug;

@kotlin.jvm.JvmName("-initializedebug")
public inline fun debug(block: qaul.rpc.debug.DebugKt.Dsl.() -> kotlin.Unit): qaul.rpc.debug.DebugOuterClass.Debug =
  qaul.rpc.debug.DebugKt.Dsl._create(qaul.rpc.debug.DebugOuterClass.Debug.newBuilder()).apply { block() }._build()
/**
 * ```
 * Libqaul RPC Debug Messages
 * ```
 *
 * Protobuf type `qaul.rpc.debug.Debug`
 */
public object DebugKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.debug.DebugOuterClass.Debug.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.debug.DebugOuterClass.Debug.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.debug.DebugOuterClass.Debug = _builder.build()

    /**
     * ```
     * request a heartbeat
     * ```
     *
     * `.qaul.rpc.debug.HeartbeatRequest heartbeat_request = 1;`
     */
    public var heartbeatRequest: qaul.rpc.debug.DebugOuterClass.HeartbeatRequest
      @JvmName("getHeartbeatRequest")
      get() = _builder.getHeartbeatRequest()
      @JvmName("setHeartbeatRequest")
      set(value) {
        _builder.setHeartbeatRequest(value)
      }
    /**
     * ```
     * request a heartbeat
     * ```
     *
     * `.qaul.rpc.debug.HeartbeatRequest heartbeat_request = 1;`
     */
    public fun clearHeartbeatRequest() {
      _builder.clearHeartbeatRequest()
    }
    /**
     * ```
     * request a heartbeat
     * ```
     *
     * `.qaul.rpc.debug.HeartbeatRequest heartbeat_request = 1;`
     * @return Whether the heartbeatRequest field is set.
     */
    public fun hasHeartbeatRequest(): kotlin.Boolean {
      return _builder.hasHeartbeatRequest()
    }

    /**
     * ```
     * response to the heartbeat request
     * ```
     *
     * `.qaul.rpc.debug.HeartbeatResponse heartbeat_response = 2;`
     */
    public var heartbeatResponse: qaul.rpc.debug.DebugOuterClass.HeartbeatResponse
      @JvmName("getHeartbeatResponse")
      get() = _builder.getHeartbeatResponse()
      @JvmName("setHeartbeatResponse")
      set(value) {
        _builder.setHeartbeatResponse(value)
      }
    /**
     * ```
     * response to the heartbeat request
     * ```
     *
     * `.qaul.rpc.debug.HeartbeatResponse heartbeat_response = 2;`
     */
    public fun clearHeartbeatResponse() {
      _builder.clearHeartbeatResponse()
    }
    /**
     * ```
     * response to the heartbeat request
     * ```
     *
     * `.qaul.rpc.debug.HeartbeatResponse heartbeat_response = 2;`
     * @return Whether the heartbeatResponse field is set.
     */
    public fun hasHeartbeatResponse(): kotlin.Boolean {
      return _builder.hasHeartbeatResponse()
    }

    /**
     * ```
     * libqaul panics immediately
     * ```
     *
     * `.qaul.rpc.debug.Panic panic = 3;`
     */
    public var panic: qaul.rpc.debug.DebugOuterClass.Panic
      @JvmName("getPanic")
      get() = _builder.getPanic()
      @JvmName("setPanic")
      set(value) {
        _builder.setPanic(value)
      }
    /**
     * ```
     * libqaul panics immediately
     * ```
     *
     * `.qaul.rpc.debug.Panic panic = 3;`
     */
    public fun clearPanic() {
      _builder.clearPanic()
    }
    /**
     * ```
     * libqaul panics immediately
     * ```
     *
     * `.qaul.rpc.debug.Panic panic = 3;`
     * @return Whether the panic field is set.
     */
    public fun hasPanic(): kotlin.Boolean {
      return _builder.hasPanic()
    }

    /**
     * ```
     * enable/disable logging to file
     * ```
     *
     * `.qaul.rpc.debug.LogToFile log_to_file = 4;`
     */
    public var logToFile: qaul.rpc.debug.DebugOuterClass.LogToFile
      @JvmName("getLogToFile")
      get() = _builder.getLogToFile()
      @JvmName("setLogToFile")
      set(value) {
        _builder.setLogToFile(value)
      }
    /**
     * ```
     * enable/disable logging to file
     * ```
     *
     * `.qaul.rpc.debug.LogToFile log_to_file = 4;`
     */
    public fun clearLogToFile() {
      _builder.clearLogToFile()
    }
    /**
     * ```
     * enable/disable logging to file
     * ```
     *
     * `.qaul.rpc.debug.LogToFile log_to_file = 4;`
     * @return Whether the logToFile field is set.
     */
    public fun hasLogToFile(): kotlin.Boolean {
      return _builder.hasLogToFile()
    }

    /**
     * ```
     * Storage Path Request
     * ```
     *
     * `.qaul.rpc.debug.StoragePathRequest storage_path_request = 5;`
     */
    public var storagePathRequest: qaul.rpc.debug.DebugOuterClass.StoragePathRequest
      @JvmName("getStoragePathRequest")
      get() = _builder.getStoragePathRequest()
      @JvmName("setStoragePathRequest")
      set(value) {
        _builder.setStoragePathRequest(value)
      }
    /**
     * ```
     * Storage Path Request
     * ```
     *
     * `.qaul.rpc.debug.StoragePathRequest storage_path_request = 5;`
     */
    public fun clearStoragePathRequest() {
      _builder.clearStoragePathRequest()
    }
    /**
     * ```
     * Storage Path Request
     * ```
     *
     * `.qaul.rpc.debug.StoragePathRequest storage_path_request = 5;`
     * @return Whether the storagePathRequest field is set.
     */
    public fun hasStoragePathRequest(): kotlin.Boolean {
      return _builder.hasStoragePathRequest()
    }

    /**
     * ```
     * Storage Path Response
     * ```
     *
     * `.qaul.rpc.debug.StoragePathResponse storage_path_response = 6;`
     */
    public var storagePathResponse: qaul.rpc.debug.DebugOuterClass.StoragePathResponse
      @JvmName("getStoragePathResponse")
      get() = _builder.getStoragePathResponse()
      @JvmName("setStoragePathResponse")
      set(value) {
        _builder.setStoragePathResponse(value)
      }
    /**
     * ```
     * Storage Path Response
     * ```
     *
     * `.qaul.rpc.debug.StoragePathResponse storage_path_response = 6;`
     */
    public fun clearStoragePathResponse() {
      _builder.clearStoragePathResponse()
    }
    /**
     * ```
     * Storage Path Response
     * ```
     *
     * `.qaul.rpc.debug.StoragePathResponse storage_path_response = 6;`
     * @return Whether the storagePathResponse field is set.
     */
    public fun hasStoragePathResponse(): kotlin.Boolean {
      return _builder.hasStoragePathResponse()
    }

    /**
     * ```
     * Request for library to delete logs
     * ```
     *
     * `.qaul.rpc.debug.DeleteLibqaulLogsRequest delete_libqaul_logs_request = 7;`
     */
    public var deleteLibqaulLogsRequest: qaul.rpc.debug.DebugOuterClass.DeleteLibqaulLogsRequest
      @JvmName("getDeleteLibqaulLogsRequest")
      get() = _builder.getDeleteLibqaulLogsRequest()
      @JvmName("setDeleteLibqaulLogsRequest")
      set(value) {
        _builder.setDeleteLibqaulLogsRequest(value)
      }
    /**
     * ```
     * Request for library to delete logs
     * ```
     *
     * `.qaul.rpc.debug.DeleteLibqaulLogsRequest delete_libqaul_logs_request = 7;`
     */
    public fun clearDeleteLibqaulLogsRequest() {
      _builder.clearDeleteLibqaulLogsRequest()
    }
    /**
     * ```
     * Request for library to delete logs
     * ```
     *
     * `.qaul.rpc.debug.DeleteLibqaulLogsRequest delete_libqaul_logs_request = 7;`
     * @return Whether the deleteLibqaulLogsRequest field is set.
     */
    public fun hasDeleteLibqaulLogsRequest(): kotlin.Boolean {
      return _builder.hasDeleteLibqaulLogsRequest()
    }
    public val messageCase: qaul.rpc.debug.DebugOuterClass.Debug.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.debug.DebugOuterClass.Debug.copy(block: qaul.rpc.debug.DebugKt.Dsl.() -> kotlin.Unit): qaul.rpc.debug.DebugOuterClass.Debug =
  qaul.rpc.debug.DebugKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.heartbeatRequestOrNull: qaul.rpc.debug.DebugOuterClass.HeartbeatRequest?
  get() = if (hasHeartbeatRequest()) getHeartbeatRequest() else null

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.heartbeatResponseOrNull: qaul.rpc.debug.DebugOuterClass.HeartbeatResponse?
  get() = if (hasHeartbeatResponse()) getHeartbeatResponse() else null

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.panicOrNull: qaul.rpc.debug.DebugOuterClass.Panic?
  get() = if (hasPanic()) getPanic() else null

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.logToFileOrNull: qaul.rpc.debug.DebugOuterClass.LogToFile?
  get() = if (hasLogToFile()) getLogToFile() else null

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.storagePathRequestOrNull: qaul.rpc.debug.DebugOuterClass.StoragePathRequest?
  get() = if (hasStoragePathRequest()) getStoragePathRequest() else null

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.storagePathResponseOrNull: qaul.rpc.debug.DebugOuterClass.StoragePathResponse?
  get() = if (hasStoragePathResponse()) getStoragePathResponse() else null

public val qaul.rpc.debug.DebugOuterClass.DebugOrBuilder.deleteLibqaulLogsRequestOrNull: qaul.rpc.debug.DebugOuterClass.DeleteLibqaulLogsRequest?
  get() = if (hasDeleteLibqaulLogsRequest()) getDeleteLibqaulLogsRequest() else null

