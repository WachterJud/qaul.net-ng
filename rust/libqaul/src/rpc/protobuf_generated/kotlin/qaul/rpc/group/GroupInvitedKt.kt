// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/group/group_rpc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.group;

@kotlin.jvm.JvmName("-initializegroupInvited")
public inline fun groupInvited(block: qaul.rpc.group.GroupInvitedKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupInvited =
  qaul.rpc.group.GroupInvitedKt.Dsl._create(qaul.rpc.group.GroupRpc.GroupInvited.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `qaul.rpc.group.GroupInvited`
 */
public object GroupInvitedKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.group.GroupRpc.GroupInvited.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.group.GroupRpc.GroupInvited.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.group.GroupRpc.GroupInvited = _builder.build()

    /**
     * ```
     * sender id
     * ```
     *
     * `bytes sender_id = 1;`
     */
    public var senderId: com.google.protobuf.ByteString
      @JvmName("getSenderId")
      get() = _builder.getSenderId()
      @JvmName("setSenderId")
      set(value) {
        _builder.setSenderId(value)
      }
    /**
     * ```
     * sender id
     * ```
     *
     * `bytes sender_id = 1;`
     */
    public fun clearSenderId() {
      _builder.clearSenderId()
    }

    /**
     * ```
     * received at
     * ```
     *
     * `uint64 received_at = 2;`
     */
    public var receivedAt: kotlin.Long
      @JvmName("getReceivedAt")
      get() = _builder.getReceivedAt()
      @JvmName("setReceivedAt")
      set(value) {
        _builder.setReceivedAt(value)
      }
    /**
     * ```
     * received at
     * ```
     *
     * `uint64 received_at = 2;`
     */
    public fun clearReceivedAt() {
      _builder.clearReceivedAt()
    }

    /**
     * ```
     * group info
     * ```
     *
     * `.qaul.rpc.group.GroupInfo group = 3;`
     */
    public var group: qaul.rpc.group.GroupRpc.GroupInfo
      @JvmName("getGroup")
      get() = _builder.getGroup()
      @JvmName("setGroup")
      set(value) {
        _builder.setGroup(value)
      }
    /**
     * ```
     * group info
     * ```
     *
     * `.qaul.rpc.group.GroupInfo group = 3;`
     */
    public fun clearGroup() {
      _builder.clearGroup()
    }
    /**
     * ```
     * group info
     * ```
     *
     * `.qaul.rpc.group.GroupInfo group = 3;`
     * @return Whether the group field is set.
     */
    public fun hasGroup(): kotlin.Boolean {
      return _builder.hasGroup()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.group.GroupRpc.GroupInvited.copy(block: qaul.rpc.group.GroupInvitedKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupInvited =
  qaul.rpc.group.GroupInvitedKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.rpc.group.GroupRpc.GroupInvitedOrBuilder.groupOrNull: qaul.rpc.group.GroupRpc.GroupInfo?
  get() = if (hasGroup()) getGroup() else null

