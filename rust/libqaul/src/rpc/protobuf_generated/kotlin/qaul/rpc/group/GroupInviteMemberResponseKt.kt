// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/group/group_rpc.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.group;

@kotlin.jvm.JvmName("-initializegroupInviteMemberResponse")
public inline fun groupInviteMemberResponse(block: qaul.rpc.group.GroupInviteMemberResponseKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupInviteMemberResponse =
  qaul.rpc.group.GroupInviteMemberResponseKt.Dsl._create(qaul.rpc.group.GroupRpc.GroupInviteMemberResponse.newBuilder()).apply { block() }._build()
/**
 * ```
 * Invite member response
 * ```
 *
 * Protobuf type `qaul.rpc.group.GroupInviteMemberResponse`
 */
public object GroupInviteMemberResponseKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.group.GroupRpc.GroupInviteMemberResponse.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.group.GroupRpc.GroupInviteMemberResponse.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.group.GroupRpc.GroupInviteMemberResponse = _builder.build()

    /**
     * ```
     * group id
     * ```
     *
     * `bytes group_id = 1;`
     */
    public var groupId: com.google.protobuf.ByteString
      @JvmName("getGroupId")
      get() = _builder.getGroupId()
      @JvmName("setGroupId")
      set(value) {
        _builder.setGroupId(value)
      }
    /**
     * ```
     * group id
     * ```
     *
     * `bytes group_id = 1;`
     */
    public fun clearGroupId() {
      _builder.clearGroupId()
    }

    /**
     * ```
     * user id
     * ```
     *
     * `bytes user_id = 2;`
     */
    public var userId: com.google.protobuf.ByteString
      @JvmName("getUserId")
      get() = _builder.getUserId()
      @JvmName("setUserId")
      set(value) {
        _builder.setUserId(value)
      }
    /**
     * ```
     * user id
     * ```
     *
     * `bytes user_id = 2;`
     */
    public fun clearUserId() {
      _builder.clearUserId()
    }

    /**
     * ```
     * result
     * ```
     *
     * `.qaul.rpc.group.GroupResult result = 3;`
     */
    public var result: qaul.rpc.group.GroupRpc.GroupResult
      @JvmName("getResult")
      get() = _builder.getResult()
      @JvmName("setResult")
      set(value) {
        _builder.setResult(value)
      }
    /**
     * ```
     * result
     * ```
     *
     * `.qaul.rpc.group.GroupResult result = 3;`
     */
    public fun clearResult() {
      _builder.clearResult()
    }
    /**
     * ```
     * result
     * ```
     *
     * `.qaul.rpc.group.GroupResult result = 3;`
     * @return Whether the result field is set.
     */
    public fun hasResult(): kotlin.Boolean {
      return _builder.hasResult()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.group.GroupRpc.GroupInviteMemberResponse.copy(block: qaul.rpc.group.GroupInviteMemberResponseKt.Dsl.() -> kotlin.Unit): qaul.rpc.group.GroupRpc.GroupInviteMemberResponse =
  qaul.rpc.group.GroupInviteMemberResponseKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.rpc.group.GroupRpc.GroupInviteMemberResponseOrBuilder.resultOrNull: qaul.rpc.group.GroupRpc.GroupResult?
  get() = if (hasResult()) getResult() else null

