// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: connections/connections.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.connections;

@kotlin.jvm.JvmName("-initializeconnections")
public inline fun connections(block: qaul.rpc.connections.ConnectionsKt.Dsl.() -> kotlin.Unit): qaul.rpc.connections.ConnectionsOuterClass.Connections =
  qaul.rpc.connections.ConnectionsKt.Dsl._create(qaul.rpc.connections.ConnectionsOuterClass.Connections.newBuilder()).apply { block() }._build()
/**
 * ```
 * Connections rpc message container
 * ```
 *
 * Protobuf type `qaul.rpc.connections.Connections`
 */
public object ConnectionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.connections.ConnectionsOuterClass.Connections.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.connections.ConnectionsOuterClass.Connections.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.connections.ConnectionsOuterClass.Connections = _builder.build()

    /**
     * ```
     * Request a list of all internet nodes.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;`
     */
    public var internetNodesRequest: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesRequest
      @JvmName("getInternetNodesRequest")
      get() = _builder.getInternetNodesRequest()
      @JvmName("setInternetNodesRequest")
      set(value) {
        _builder.setInternetNodesRequest(value)
      }
    /**
     * ```
     * Request a list of all internet nodes.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;`
     */
    public fun clearInternetNodesRequest() {
      _builder.clearInternetNodesRequest()
    }
    /**
     * ```
     * Request a list of all internet nodes.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesRequest internet_nodes_request = 1;`
     * @return Whether the internetNodesRequest field is set.
     */
    public fun hasInternetNodesRequest(): kotlin.Boolean {
      return _builder.hasInternetNodesRequest()
    }

    /**
     * ```
     * returns a list of all internet nodes and
     * an information about why this message has been sent.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;`
     */
    public var internetNodesList: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesList
      @JvmName("getInternetNodesList")
      get() = _builder.getInternetNodesList()
      @JvmName("setInternetNodesList")
      set(value) {
        _builder.setInternetNodesList(value)
      }
    /**
     * ```
     * returns a list of all internet nodes and
     * an information about why this message has been sent.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;`
     */
    public fun clearInternetNodesList() {
      _builder.clearInternetNodesList()
    }
    /**
     * ```
     * returns a list of all internet nodes and
     * an information about why this message has been sent.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesList internet_nodes_list = 2;`
     * @return Whether the internetNodesList field is set.
     */
    public fun hasInternetNodesList(): kotlin.Boolean {
      return _builder.hasInternetNodesList()
    }

    /**
     * ```
     * Add a new internet node address.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;`
     */
    public var internetNodesAdd: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesAdd")
      get() = _builder.getInternetNodesAdd()
      @JvmName("setInternetNodesAdd")
      set(value) {
        _builder.setInternetNodesAdd(value)
      }
    /**
     * ```
     * Add a new internet node address.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;`
     */
    public fun clearInternetNodesAdd() {
      _builder.clearInternetNodesAdd()
    }
    /**
     * ```
     * Add a new internet node address.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_add = 3;`
     * @return Whether the internetNodesAdd field is set.
     */
    public fun hasInternetNodesAdd(): kotlin.Boolean {
      return _builder.hasInternetNodesAdd()
    }

    /**
     * ```
     * Remove an internet node address.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;`
     */
    public var internetNodesRemove: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesRemove")
      get() = _builder.getInternetNodesRemove()
      @JvmName("setInternetNodesRemove")
      set(value) {
        _builder.setInternetNodesRemove(value)
      }
    /**
     * ```
     * Remove an internet node address.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;`
     */
    public fun clearInternetNodesRemove() {
      _builder.clearInternetNodesRemove()
    }
    /**
     * ```
     * Remove an internet node address.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_remove = 4;`
     * @return Whether the internetNodesRemove field is set.
     */
    public fun hasInternetNodesRemove(): kotlin.Boolean {
      return _builder.hasInternetNodesRemove()
    }

    /**
     * ```
     * Update an internet node state.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_state = 5;`
     */
    public var internetNodesState: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesState")
      get() = _builder.getInternetNodesState()
      @JvmName("setInternetNodesState")
      set(value) {
        _builder.setInternetNodesState(value)
      }
    /**
     * ```
     * Update an internet node state.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_state = 5;`
     */
    public fun clearInternetNodesState() {
      _builder.clearInternetNodesState()
    }
    /**
     * ```
     * Update an internet node state.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_state = 5;`
     * @return Whether the internetNodesState field is set.
     */
    public fun hasInternetNodesState(): kotlin.Boolean {
      return _builder.hasInternetNodesState()
    }

    /**
     * ```
     * Rename internet node.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_rename = 6;`
     */
    public var internetNodesRename: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry
      @JvmName("getInternetNodesRename")
      get() = _builder.getInternetNodesRename()
      @JvmName("setInternetNodesRename")
      set(value) {
        _builder.setInternetNodesRename(value)
      }
    /**
     * ```
     * Rename internet node.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_rename = 6;`
     */
    public fun clearInternetNodesRename() {
      _builder.clearInternetNodesRename()
    }
    /**
     * ```
     * Rename internet node.
     * libqaul returns an internet_nodes_list message.
     * ```
     *
     * `.qaul.rpc.connections.InternetNodesEntry internet_nodes_rename = 6;`
     * @return Whether the internetNodesRename field is set.
     */
    public fun hasInternetNodesRename(): kotlin.Boolean {
      return _builder.hasInternetNodesRename()
    }
    public val messageCase: qaul.rpc.connections.ConnectionsOuterClass.Connections.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.connections.ConnectionsOuterClass.Connections.copy(block: qaul.rpc.connections.ConnectionsKt.Dsl.() -> kotlin.Unit): qaul.rpc.connections.ConnectionsOuterClass.Connections =
  qaul.rpc.connections.ConnectionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesRequestOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesRequest?
  get() = if (hasInternetNodesRequest()) getInternetNodesRequest() else null

public val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesListOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesList?
  get() = if (hasInternetNodesList()) getInternetNodesList() else null

public val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesAddOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesAdd()) getInternetNodesAdd() else null

public val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesRemoveOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesRemove()) getInternetNodesRemove() else null

public val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesStateOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesState()) getInternetNodesState() else null

public val qaul.rpc.connections.ConnectionsOuterClass.ConnectionsOrBuilder.internetNodesRenameOrNull: qaul.rpc.connections.ConnectionsOuterClass.InternetNodesEntry?
  get() = if (hasInternetNodesRename()) getInternetNodesRename() else null

