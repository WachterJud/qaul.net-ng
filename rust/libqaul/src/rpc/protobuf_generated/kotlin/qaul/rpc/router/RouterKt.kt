// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: router/router.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.router;

@kotlin.jvm.JvmName("-initializerouter")
public inline fun router(block: qaul.rpc.router.RouterKt.Dsl.() -> kotlin.Unit): qaul.rpc.router.RouterOuterClass.Router =
  qaul.rpc.router.RouterKt.Dsl._create(qaul.rpc.router.RouterOuterClass.Router.newBuilder()).apply { block() }._build()
/**
 * ```
 * router rpc message container
 * ```
 *
 * Protobuf type `qaul.rpc.router.Router`
 */
public object RouterKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.router.RouterOuterClass.Router.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.router.RouterOuterClass.Router.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.router.RouterOuterClass.Router = _builder.build()

    /**
     * `.qaul.rpc.router.RoutingTableRequest routing_table_request = 1;`
     */
    public var routingTableRequest: qaul.rpc.router.RouterOuterClass.RoutingTableRequest
      @JvmName("getRoutingTableRequest")
      get() = _builder.getRoutingTableRequest()
      @JvmName("setRoutingTableRequest")
      set(value) {
        _builder.setRoutingTableRequest(value)
      }
    /**
     * `.qaul.rpc.router.RoutingTableRequest routing_table_request = 1;`
     */
    public fun clearRoutingTableRequest() {
      _builder.clearRoutingTableRequest()
    }
    /**
     * `.qaul.rpc.router.RoutingTableRequest routing_table_request = 1;`
     * @return Whether the routingTableRequest field is set.
     */
    public fun hasRoutingTableRequest(): kotlin.Boolean {
      return _builder.hasRoutingTableRequest()
    }

    /**
     * `.qaul.rpc.router.RoutingTableList routing_table = 2;`
     */
    public var routingTable: qaul.rpc.router.RouterOuterClass.RoutingTableList
      @JvmName("getRoutingTable")
      get() = _builder.getRoutingTable()
      @JvmName("setRoutingTable")
      set(value) {
        _builder.setRoutingTable(value)
      }
    /**
     * `.qaul.rpc.router.RoutingTableList routing_table = 2;`
     */
    public fun clearRoutingTable() {
      _builder.clearRoutingTable()
    }
    /**
     * `.qaul.rpc.router.RoutingTableList routing_table = 2;`
     * @return Whether the routingTable field is set.
     */
    public fun hasRoutingTable(): kotlin.Boolean {
      return _builder.hasRoutingTable()
    }

    /**
     * `.qaul.rpc.router.ConnectionsRequest connections_request = 3;`
     */
    public var connectionsRequest: qaul.rpc.router.RouterOuterClass.ConnectionsRequest
      @JvmName("getConnectionsRequest")
      get() = _builder.getConnectionsRequest()
      @JvmName("setConnectionsRequest")
      set(value) {
        _builder.setConnectionsRequest(value)
      }
    /**
     * `.qaul.rpc.router.ConnectionsRequest connections_request = 3;`
     */
    public fun clearConnectionsRequest() {
      _builder.clearConnectionsRequest()
    }
    /**
     * `.qaul.rpc.router.ConnectionsRequest connections_request = 3;`
     * @return Whether the connectionsRequest field is set.
     */
    public fun hasConnectionsRequest(): kotlin.Boolean {
      return _builder.hasConnectionsRequest()
    }

    /**
     * `.qaul.rpc.router.ConnectionsList connections_list = 4;`
     */
    public var connectionsList: qaul.rpc.router.RouterOuterClass.ConnectionsList
      @JvmName("getConnectionsList")
      get() = _builder.getConnectionsList()
      @JvmName("setConnectionsList")
      set(value) {
        _builder.setConnectionsList(value)
      }
    /**
     * `.qaul.rpc.router.ConnectionsList connections_list = 4;`
     */
    public fun clearConnectionsList() {
      _builder.clearConnectionsList()
    }
    /**
     * `.qaul.rpc.router.ConnectionsList connections_list = 4;`
     * @return Whether the connectionsList field is set.
     */
    public fun hasConnectionsList(): kotlin.Boolean {
      return _builder.hasConnectionsList()
    }

    /**
     * `.qaul.rpc.router.NeighboursRequest neighbours_request = 5;`
     */
    public var neighboursRequest: qaul.rpc.router.RouterOuterClass.NeighboursRequest
      @JvmName("getNeighboursRequest")
      get() = _builder.getNeighboursRequest()
      @JvmName("setNeighboursRequest")
      set(value) {
        _builder.setNeighboursRequest(value)
      }
    /**
     * `.qaul.rpc.router.NeighboursRequest neighbours_request = 5;`
     */
    public fun clearNeighboursRequest() {
      _builder.clearNeighboursRequest()
    }
    /**
     * `.qaul.rpc.router.NeighboursRequest neighbours_request = 5;`
     * @return Whether the neighboursRequest field is set.
     */
    public fun hasNeighboursRequest(): kotlin.Boolean {
      return _builder.hasNeighboursRequest()
    }

    /**
     * `.qaul.rpc.router.NeighboursList neighbours_list = 6;`
     */
    public var neighboursList: qaul.rpc.router.RouterOuterClass.NeighboursList
      @JvmName("getNeighboursList")
      get() = _builder.getNeighboursList()
      @JvmName("setNeighboursList")
      set(value) {
        _builder.setNeighboursList(value)
      }
    /**
     * `.qaul.rpc.router.NeighboursList neighbours_list = 6;`
     */
    public fun clearNeighboursList() {
      _builder.clearNeighboursList()
    }
    /**
     * `.qaul.rpc.router.NeighboursList neighbours_list = 6;`
     * @return Whether the neighboursList field is set.
     */
    public fun hasNeighboursList(): kotlin.Boolean {
      return _builder.hasNeighboursList()
    }
    public val messageCase: qaul.rpc.router.RouterOuterClass.Router.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.router.RouterOuterClass.Router.copy(block: qaul.rpc.router.RouterKt.Dsl.() -> kotlin.Unit): qaul.rpc.router.RouterOuterClass.Router =
  qaul.rpc.router.RouterKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val qaul.rpc.router.RouterOuterClass.RouterOrBuilder.routingTableRequestOrNull: qaul.rpc.router.RouterOuterClass.RoutingTableRequest?
  get() = if (hasRoutingTableRequest()) getRoutingTableRequest() else null

public val qaul.rpc.router.RouterOuterClass.RouterOrBuilder.routingTableOrNull: qaul.rpc.router.RouterOuterClass.RoutingTableList?
  get() = if (hasRoutingTable()) getRoutingTable() else null

public val qaul.rpc.router.RouterOuterClass.RouterOrBuilder.connectionsRequestOrNull: qaul.rpc.router.RouterOuterClass.ConnectionsRequest?
  get() = if (hasConnectionsRequest()) getConnectionsRequest() else null

public val qaul.rpc.router.RouterOuterClass.RouterOrBuilder.connectionsListOrNull: qaul.rpc.router.RouterOuterClass.ConnectionsList?
  get() = if (hasConnectionsList()) getConnectionsList() else null

public val qaul.rpc.router.RouterOuterClass.RouterOrBuilder.neighboursRequestOrNull: qaul.rpc.router.RouterOuterClass.NeighboursRequest?
  get() = if (hasNeighboursRequest()) getNeighboursRequest() else null

public val qaul.rpc.router.RouterOuterClass.RouterOrBuilder.neighboursListOrNull: qaul.rpc.router.RouterOuterClass.NeighboursList?
  get() = if (hasNeighboursList()) getNeighboursList() else null

