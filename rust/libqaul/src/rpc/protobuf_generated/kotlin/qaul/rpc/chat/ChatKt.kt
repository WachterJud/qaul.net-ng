//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/chat/chat.proto

package qaul.rpc.chat;

@kotlin.jvm.JvmName("-initializechat")
public inline fun chat(block: qaul.rpc.chat.ChatKt.Dsl.() -> kotlin.Unit): qaul.rpc.chat.ChatOuterClass.Chat =
  qaul.rpc.chat.ChatKt.Dsl._create(qaul.rpc.chat.ChatOuterClass.Chat.newBuilder()).apply { block() }._build()
public object ChatKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.chat.ChatOuterClass.Chat.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.chat.ChatOuterClass.Chat.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.chat.ChatOuterClass.Chat = _builder.build()

    /**
     * <pre>
     * request an overview over the last conversations
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatOverviewRequest overview_request = 1;</code>
     */
    public var overviewRequest: qaul.rpc.chat.ChatOuterClass.ChatOverviewRequest
      @JvmName("getOverviewRequest")
      get() = _builder.getOverviewRequest()
      @JvmName("setOverviewRequest")
      set(value) {
        _builder.setOverviewRequest(value)
      }
    /**
     * <pre>
     * request an overview over the last conversations
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatOverviewRequest overview_request = 1;</code>
     */
    public fun clearOverviewRequest() {
      _builder.clearOverviewRequest()
    }
    /**
     * <pre>
     * request an overview over the last conversations
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatOverviewRequest overview_request = 1;</code>
     * @return Whether the overviewRequest field is set.
     */
    public fun hasOverviewRequest(): kotlin.Boolean {
      return _builder.hasOverviewRequest()
    }

    /**
     * <pre>
     * contains the overview list
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatOverviewList overview_list = 2;</code>
     */
    public var overviewList: qaul.rpc.chat.ChatOuterClass.ChatOverviewList
      @JvmName("getOverviewList")
      get() = _builder.getOverviewList()
      @JvmName("setOverviewList")
      set(value) {
        _builder.setOverviewList(value)
      }
    /**
     * <pre>
     * contains the overview list
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatOverviewList overview_list = 2;</code>
     */
    public fun clearOverviewList() {
      _builder.clearOverviewList()
    }
    /**
     * <pre>
     * contains the overview list
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatOverviewList overview_list = 2;</code>
     * @return Whether the overviewList field is set.
     */
    public fun hasOverviewList(): kotlin.Boolean {
      return _builder.hasOverviewList()
    }

    /**
     * <pre>
     * request a specific conversation
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatConversationRequest conversation_request = 3;</code>
     */
    public var conversationRequest: qaul.rpc.chat.ChatOuterClass.ChatConversationRequest
      @JvmName("getConversationRequest")
      get() = _builder.getConversationRequest()
      @JvmName("setConversationRequest")
      set(value) {
        _builder.setConversationRequest(value)
      }
    /**
     * <pre>
     * request a specific conversation
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatConversationRequest conversation_request = 3;</code>
     */
    public fun clearConversationRequest() {
      _builder.clearConversationRequest()
    }
    /**
     * <pre>
     * request a specific conversation
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatConversationRequest conversation_request = 3;</code>
     * @return Whether the conversationRequest field is set.
     */
    public fun hasConversationRequest(): kotlin.Boolean {
      return _builder.hasConversationRequest()
    }

    /**
     * <pre>
     * list of a chat conversation
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatConversationList conversation_list = 4;</code>
     */
    public var conversationList: qaul.rpc.chat.ChatOuterClass.ChatConversationList
      @JvmName("getConversationList")
      get() = _builder.getConversationList()
      @JvmName("setConversationList")
      set(value) {
        _builder.setConversationList(value)
      }
    /**
     * <pre>
     * list of a chat conversation
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatConversationList conversation_list = 4;</code>
     */
    public fun clearConversationList() {
      _builder.clearConversationList()
    }
    /**
     * <pre>
     * list of a chat conversation
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatConversationList conversation_list = 4;</code>
     * @return Whether the conversationList field is set.
     */
    public fun hasConversationList(): kotlin.Boolean {
      return _builder.hasConversationList()
    }

    /**
     * <pre>
     * send a new chat message
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatMessageSend send = 5;</code>
     */
    public var send: qaul.rpc.chat.ChatOuterClass.ChatMessageSend
      @JvmName("getSend")
      get() = _builder.getSend()
      @JvmName("setSend")
      set(value) {
        _builder.setSend(value)
      }
    /**
     * <pre>
     * send a new chat message
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatMessageSend send = 5;</code>
     */
    public fun clearSend() {
      _builder.clearSend()
    }
    /**
     * <pre>
     * send a new chat message
     * </pre>
     *
     * <code>.qaul.rpc.chat.ChatMessageSend send = 5;</code>
     * @return Whether the send field is set.
     */
    public fun hasSend(): kotlin.Boolean {
      return _builder.hasSend()
    }
    public val messageCase: qaul.rpc.chat.ChatOuterClass.Chat.MessageCase
      @JvmName("getMessageCase")
      get() = _builder.getMessageCase()

    public fun clearMessage() {
      _builder.clearMessage()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.chat.ChatOuterClass.Chat.copy(block: qaul.rpc.chat.ChatKt.Dsl.() -> kotlin.Unit): qaul.rpc.chat.ChatOuterClass.Chat =
  qaul.rpc.chat.ChatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val qaul.rpc.chat.ChatOuterClass.ChatOrBuilder.overviewRequestOrNull: qaul.rpc.chat.ChatOuterClass.ChatOverviewRequest?
  get() = if (hasOverviewRequest()) getOverviewRequest() else null

val qaul.rpc.chat.ChatOuterClass.ChatOrBuilder.overviewListOrNull: qaul.rpc.chat.ChatOuterClass.ChatOverviewList?
  get() = if (hasOverviewList()) getOverviewList() else null

val qaul.rpc.chat.ChatOuterClass.ChatOrBuilder.conversationRequestOrNull: qaul.rpc.chat.ChatOuterClass.ChatConversationRequest?
  get() = if (hasConversationRequest()) getConversationRequest() else null

val qaul.rpc.chat.ChatOuterClass.ChatOrBuilder.conversationListOrNull: qaul.rpc.chat.ChatOuterClass.ChatConversationList?
  get() = if (hasConversationList()) getConversationList() else null

val qaul.rpc.chat.ChatOuterClass.ChatOrBuilder.sendOrNull: qaul.rpc.chat.ChatOuterClass.ChatMessageSend?
  get() = if (hasSend()) getSend() else null

