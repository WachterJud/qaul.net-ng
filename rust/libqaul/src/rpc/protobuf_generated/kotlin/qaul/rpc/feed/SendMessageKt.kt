// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: services/feed/feed.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package qaul.rpc.feed;

@kotlin.jvm.JvmName("-initializesendMessage")
public inline fun sendMessage(block: qaul.rpc.feed.SendMessageKt.Dsl.() -> kotlin.Unit): qaul.rpc.feed.FeedOuterClass.SendMessage =
  qaul.rpc.feed.SendMessageKt.Dsl._create(qaul.rpc.feed.FeedOuterClass.SendMessage.newBuilder()).apply { block() }._build()
/**
 * ```
 * send feed message
 * ```
 *
 * Protobuf type `qaul.rpc.feed.SendMessage`
 */
public object SendMessageKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: qaul.rpc.feed.FeedOuterClass.SendMessage.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: qaul.rpc.feed.FeedOuterClass.SendMessage.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): qaul.rpc.feed.FeedOuterClass.SendMessage = _builder.build()

    /**
     * `string content = 1;`
     */
    public var content: kotlin.String
      @JvmName("getContent")
      get() = _builder.getContent()
      @JvmName("setContent")
      set(value) {
        _builder.setContent(value)
      }
    /**
     * `string content = 1;`
     */
    public fun clearContent() {
      _builder.clearContent()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun qaul.rpc.feed.FeedOuterClass.SendMessage.copy(block: qaul.rpc.feed.SendMessageKt.Dsl.() -> kotlin.Unit): qaul.rpc.feed.FeedOuterClass.SendMessage =
  qaul.rpc.feed.SendMessageKt.Dsl._create(this.toBuilder()).apply { block() }._build()

