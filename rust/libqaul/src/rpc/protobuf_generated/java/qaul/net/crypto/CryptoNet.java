// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: services/crypto/crypto_net.proto

package qaul.net.crypto;

public final class CryptoNet {
  private CryptoNet() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface CryptoserviceContainerOrBuilder extends
      // @@protoc_insertion_point(interface_extends:qaul.net.crypto.CryptoserviceContainer)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
     * @return Whether the secondHandshake field is set.
     */
    boolean hasSecondHandshake();
    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
     * @return The secondHandshake.
     */
    qaul.net.crypto.CryptoNet.SecondHandshake getSecondHandshake();
    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
     */
    qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder getSecondHandshakeOrBuilder();

    qaul.net.crypto.CryptoNet.CryptoserviceContainer.MessageCase getMessageCase();
  }
  /**
   * <pre>
   * Cryptoservice sending container
   * </pre>
   *
   * Protobuf type {@code qaul.net.crypto.CryptoserviceContainer}
   */
  public static final class CryptoserviceContainer extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:qaul.net.crypto.CryptoserviceContainer)
      CryptoserviceContainerOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use CryptoserviceContainer.newBuilder() to construct.
    private CryptoserviceContainer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private CryptoserviceContainer() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new CryptoserviceContainer();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_CryptoserviceContainer_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_CryptoserviceContainer_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              qaul.net.crypto.CryptoNet.CryptoserviceContainer.class, qaul.net.crypto.CryptoNet.CryptoserviceContainer.Builder.class);
    }

    private int messageCase_ = 0;
    @SuppressWarnings("serial")
    private java.lang.Object message_;
    public enum MessageCase
        implements com.google.protobuf.Internal.EnumLite,
            com.google.protobuf.AbstractMessage.InternalOneOfEnum {
      SECOND_HANDSHAKE(1),
      MESSAGE_NOT_SET(0);
      private final int value;
      private MessageCase(int value) {
        this.value = value;
      }
      /**
       * @param value The number of the enum to look for.
       * @return The enum associated with the given number.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MessageCase valueOf(int value) {
        return forNumber(value);
      }

      public static MessageCase forNumber(int value) {
        switch (value) {
          case 1: return SECOND_HANDSHAKE;
          case 0: return MESSAGE_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public MessageCase
    getMessageCase() {
      return MessageCase.forNumber(
          messageCase_);
    }

    public static final int SECOND_HANDSHAKE_FIELD_NUMBER = 1;
    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
     * @return Whether the secondHandshake field is set.
     */
    @java.lang.Override
    public boolean hasSecondHandshake() {
      return messageCase_ == 1;
    }
    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
     * @return The secondHandshake.
     */
    @java.lang.Override
    public qaul.net.crypto.CryptoNet.SecondHandshake getSecondHandshake() {
      if (messageCase_ == 1) {
         return (qaul.net.crypto.CryptoNet.SecondHandshake) message_;
      }
      return qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
    }
    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
     */
    @java.lang.Override
    public qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder getSecondHandshakeOrBuilder() {
      if (messageCase_ == 1) {
         return (qaul.net.crypto.CryptoNet.SecondHandshake) message_;
      }
      return qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (messageCase_ == 1) {
        output.writeMessage(1, (qaul.net.crypto.CryptoNet.SecondHandshake) message_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (messageCase_ == 1) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, (qaul.net.crypto.CryptoNet.SecondHandshake) message_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof qaul.net.crypto.CryptoNet.CryptoserviceContainer)) {
        return super.equals(obj);
      }
      qaul.net.crypto.CryptoNet.CryptoserviceContainer other = (qaul.net.crypto.CryptoNet.CryptoserviceContainer) obj;

      if (!getMessageCase().equals(other.getMessageCase())) return false;
      switch (messageCase_) {
        case 1:
          if (!getSecondHandshake()
              .equals(other.getSecondHandshake())) return false;
          break;
        case 0:
        default:
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      switch (messageCase_) {
        case 1:
          hash = (37 * hash) + SECOND_HANDSHAKE_FIELD_NUMBER;
          hash = (53 * hash) + getSecondHandshake().hashCode();
          break;
        case 0:
        default:
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(qaul.net.crypto.CryptoNet.CryptoserviceContainer prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Cryptoservice sending container
     * </pre>
     *
     * Protobuf type {@code qaul.net.crypto.CryptoserviceContainer}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:qaul.net.crypto.CryptoserviceContainer)
        qaul.net.crypto.CryptoNet.CryptoserviceContainerOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_CryptoserviceContainer_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_CryptoserviceContainer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                qaul.net.crypto.CryptoNet.CryptoserviceContainer.class, qaul.net.crypto.CryptoNet.CryptoserviceContainer.Builder.class);
      }

      // Construct using qaul.net.crypto.CryptoNet.CryptoserviceContainer.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (secondHandshakeBuilder_ != null) {
          secondHandshakeBuilder_.clear();
        }
        messageCase_ = 0;
        message_ = null;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_CryptoserviceContainer_descriptor;
      }

      @java.lang.Override
      public qaul.net.crypto.CryptoNet.CryptoserviceContainer getDefaultInstanceForType() {
        return qaul.net.crypto.CryptoNet.CryptoserviceContainer.getDefaultInstance();
      }

      @java.lang.Override
      public qaul.net.crypto.CryptoNet.CryptoserviceContainer build() {
        qaul.net.crypto.CryptoNet.CryptoserviceContainer result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public qaul.net.crypto.CryptoNet.CryptoserviceContainer buildPartial() {
        qaul.net.crypto.CryptoNet.CryptoserviceContainer result = new qaul.net.crypto.CryptoNet.CryptoserviceContainer(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        buildPartialOneofs(result);
        onBuilt();
        return result;
      }

      private void buildPartial0(qaul.net.crypto.CryptoNet.CryptoserviceContainer result) {
        int from_bitField0_ = bitField0_;
      }

      private void buildPartialOneofs(qaul.net.crypto.CryptoNet.CryptoserviceContainer result) {
        result.messageCase_ = messageCase_;
        result.message_ = this.message_;
        if (messageCase_ == 1 &&
            secondHandshakeBuilder_ != null) {
          result.message_ = secondHandshakeBuilder_.build();
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof qaul.net.crypto.CryptoNet.CryptoserviceContainer) {
          return mergeFrom((qaul.net.crypto.CryptoNet.CryptoserviceContainer)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(qaul.net.crypto.CryptoNet.CryptoserviceContainer other) {
        if (other == qaul.net.crypto.CryptoNet.CryptoserviceContainer.getDefaultInstance()) return this;
        switch (other.getMessageCase()) {
          case SECOND_HANDSHAKE: {
            mergeSecondHandshake(other.getSecondHandshake());
            break;
          }
          case MESSAGE_NOT_SET: {
            break;
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getSecondHandshakeFieldBuilder().getBuilder(),
                    extensionRegistry);
                messageCase_ = 1;
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int messageCase_ = 0;
      private java.lang.Object message_;
      public MessageCase
          getMessageCase() {
        return MessageCase.forNumber(
            messageCase_);
      }

      public Builder clearMessage() {
        messageCase_ = 0;
        message_ = null;
        onChanged();
        return this;
      }

      private int bitField0_;

      private com.google.protobuf.SingleFieldBuilderV3<
          qaul.net.crypto.CryptoNet.SecondHandshake, qaul.net.crypto.CryptoNet.SecondHandshake.Builder, qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder> secondHandshakeBuilder_;
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       * @return Whether the secondHandshake field is set.
       */
      @java.lang.Override
      public boolean hasSecondHandshake() {
        return messageCase_ == 1;
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       * @return The secondHandshake.
       */
      @java.lang.Override
      public qaul.net.crypto.CryptoNet.SecondHandshake getSecondHandshake() {
        if (secondHandshakeBuilder_ == null) {
          if (messageCase_ == 1) {
            return (qaul.net.crypto.CryptoNet.SecondHandshake) message_;
          }
          return qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
        } else {
          if (messageCase_ == 1) {
            return secondHandshakeBuilder_.getMessage();
          }
          return qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      public Builder setSecondHandshake(qaul.net.crypto.CryptoNet.SecondHandshake value) {
        if (secondHandshakeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          message_ = value;
          onChanged();
        } else {
          secondHandshakeBuilder_.setMessage(value);
        }
        messageCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      public Builder setSecondHandshake(
          qaul.net.crypto.CryptoNet.SecondHandshake.Builder builderForValue) {
        if (secondHandshakeBuilder_ == null) {
          message_ = builderForValue.build();
          onChanged();
        } else {
          secondHandshakeBuilder_.setMessage(builderForValue.build());
        }
        messageCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      public Builder mergeSecondHandshake(qaul.net.crypto.CryptoNet.SecondHandshake value) {
        if (secondHandshakeBuilder_ == null) {
          if (messageCase_ == 1 &&
              message_ != qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance()) {
            message_ = qaul.net.crypto.CryptoNet.SecondHandshake.newBuilder((qaul.net.crypto.CryptoNet.SecondHandshake) message_)
                .mergeFrom(value).buildPartial();
          } else {
            message_ = value;
          }
          onChanged();
        } else {
          if (messageCase_ == 1) {
            secondHandshakeBuilder_.mergeFrom(value);
          } else {
            secondHandshakeBuilder_.setMessage(value);
          }
        }
        messageCase_ = 1;
        return this;
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      public Builder clearSecondHandshake() {
        if (secondHandshakeBuilder_ == null) {
          if (messageCase_ == 1) {
            messageCase_ = 0;
            message_ = null;
            onChanged();
          }
        } else {
          if (messageCase_ == 1) {
            messageCase_ = 0;
            message_ = null;
          }
          secondHandshakeBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      public qaul.net.crypto.CryptoNet.SecondHandshake.Builder getSecondHandshakeBuilder() {
        return getSecondHandshakeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      @java.lang.Override
      public qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder getSecondHandshakeOrBuilder() {
        if ((messageCase_ == 1) && (secondHandshakeBuilder_ != null)) {
          return secondHandshakeBuilder_.getMessageOrBuilder();
        } else {
          if (messageCase_ == 1) {
            return (qaul.net.crypto.CryptoNet.SecondHandshake) message_;
          }
          return qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
        }
      }
      /**
       * <pre>
       * Second Handshake Message
       * </pre>
       *
       * <code>.qaul.net.crypto.SecondHandshake second_handshake = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          qaul.net.crypto.CryptoNet.SecondHandshake, qaul.net.crypto.CryptoNet.SecondHandshake.Builder, qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder> 
          getSecondHandshakeFieldBuilder() {
        if (secondHandshakeBuilder_ == null) {
          if (!(messageCase_ == 1)) {
            message_ = qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
          }
          secondHandshakeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              qaul.net.crypto.CryptoNet.SecondHandshake, qaul.net.crypto.CryptoNet.SecondHandshake.Builder, qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder>(
                  (qaul.net.crypto.CryptoNet.SecondHandshake) message_,
                  getParentForChildren(),
                  isClean());
          message_ = null;
        }
        messageCase_ = 1;
        onChanged();
        return secondHandshakeBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:qaul.net.crypto.CryptoserviceContainer)
    }

    // @@protoc_insertion_point(class_scope:qaul.net.crypto.CryptoserviceContainer)
    private static final qaul.net.crypto.CryptoNet.CryptoserviceContainer DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new qaul.net.crypto.CryptoNet.CryptoserviceContainer();
    }

    public static qaul.net.crypto.CryptoNet.CryptoserviceContainer getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<CryptoserviceContainer>
        PARSER = new com.google.protobuf.AbstractParser<CryptoserviceContainer>() {
      @java.lang.Override
      public CryptoserviceContainer parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<CryptoserviceContainer> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<CryptoserviceContainer> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public qaul.net.crypto.CryptoNet.CryptoserviceContainer getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SecondHandshakeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:qaul.net.crypto.SecondHandshake)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * confirm message ID of first handshake message
     * </pre>
     *
     * <code>bytes signature = 1;</code>
     * @return The signature.
     */
    com.google.protobuf.ByteString getSignature();

    /**
     * <pre>
     * received at timestamp
     * </pre>
     *
     * <code>uint64 received_at = 2;</code>
     * @return The receivedAt.
     */
    long getReceivedAt();
  }
  /**
   * <pre>
   * Second Handshake Message
   * </pre>
   *
   * Protobuf type {@code qaul.net.crypto.SecondHandshake}
   */
  public static final class SecondHandshake extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:qaul.net.crypto.SecondHandshake)
      SecondHandshakeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SecondHandshake.newBuilder() to construct.
    private SecondHandshake(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SecondHandshake() {
      signature_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new SecondHandshake();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_SecondHandshake_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_SecondHandshake_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              qaul.net.crypto.CryptoNet.SecondHandshake.class, qaul.net.crypto.CryptoNet.SecondHandshake.Builder.class);
    }

    public static final int SIGNATURE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * confirm message ID of first handshake message
     * </pre>
     *
     * <code>bytes signature = 1;</code>
     * @return The signature.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSignature() {
      return signature_;
    }

    public static final int RECEIVED_AT_FIELD_NUMBER = 2;
    private long receivedAt_ = 0L;
    /**
     * <pre>
     * received at timestamp
     * </pre>
     *
     * <code>uint64 received_at = 2;</code>
     * @return The receivedAt.
     */
    @java.lang.Override
    public long getReceivedAt() {
      return receivedAt_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!signature_.isEmpty()) {
        output.writeBytes(1, signature_);
      }
      if (receivedAt_ != 0L) {
        output.writeUInt64(2, receivedAt_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!signature_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, signature_);
      }
      if (receivedAt_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(2, receivedAt_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof qaul.net.crypto.CryptoNet.SecondHandshake)) {
        return super.equals(obj);
      }
      qaul.net.crypto.CryptoNet.SecondHandshake other = (qaul.net.crypto.CryptoNet.SecondHandshake) obj;

      if (!getSignature()
          .equals(other.getSignature())) return false;
      if (getReceivedAt()
          != other.getReceivedAt()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getSignature().hashCode();
      hash = (37 * hash) + RECEIVED_AT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getReceivedAt());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static qaul.net.crypto.CryptoNet.SecondHandshake parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static qaul.net.crypto.CryptoNet.SecondHandshake parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static qaul.net.crypto.CryptoNet.SecondHandshake parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(qaul.net.crypto.CryptoNet.SecondHandshake prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Second Handshake Message
     * </pre>
     *
     * Protobuf type {@code qaul.net.crypto.SecondHandshake}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:qaul.net.crypto.SecondHandshake)
        qaul.net.crypto.CryptoNet.SecondHandshakeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_SecondHandshake_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_SecondHandshake_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                qaul.net.crypto.CryptoNet.SecondHandshake.class, qaul.net.crypto.CryptoNet.SecondHandshake.Builder.class);
      }

      // Construct using qaul.net.crypto.CryptoNet.SecondHandshake.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        signature_ = com.google.protobuf.ByteString.EMPTY;
        receivedAt_ = 0L;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return qaul.net.crypto.CryptoNet.internal_static_qaul_net_crypto_SecondHandshake_descriptor;
      }

      @java.lang.Override
      public qaul.net.crypto.CryptoNet.SecondHandshake getDefaultInstanceForType() {
        return qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance();
      }

      @java.lang.Override
      public qaul.net.crypto.CryptoNet.SecondHandshake build() {
        qaul.net.crypto.CryptoNet.SecondHandshake result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public qaul.net.crypto.CryptoNet.SecondHandshake buildPartial() {
        qaul.net.crypto.CryptoNet.SecondHandshake result = new qaul.net.crypto.CryptoNet.SecondHandshake(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(qaul.net.crypto.CryptoNet.SecondHandshake result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.signature_ = signature_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.receivedAt_ = receivedAt_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof qaul.net.crypto.CryptoNet.SecondHandshake) {
          return mergeFrom((qaul.net.crypto.CryptoNet.SecondHandshake)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(qaul.net.crypto.CryptoNet.SecondHandshake other) {
        if (other == qaul.net.crypto.CryptoNet.SecondHandshake.getDefaultInstance()) return this;
        if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
          setSignature(other.getSignature());
        }
        if (other.getReceivedAt() != 0L) {
          setReceivedAt(other.getReceivedAt());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                signature_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 16: {
                receivedAt_ = input.readUInt64();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * confirm message ID of first handshake message
       * </pre>
       *
       * <code>bytes signature = 1;</code>
       * @return The signature.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSignature() {
        return signature_;
      }
      /**
       * <pre>
       * confirm message ID of first handshake message
       * </pre>
       *
       * <code>bytes signature = 1;</code>
       * @param value The signature to set.
       * @return This builder for chaining.
       */
      public Builder setSignature(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        signature_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * confirm message ID of first handshake message
       * </pre>
       *
       * <code>bytes signature = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000001);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }

      private long receivedAt_ ;
      /**
       * <pre>
       * received at timestamp
       * </pre>
       *
       * <code>uint64 received_at = 2;</code>
       * @return The receivedAt.
       */
      @java.lang.Override
      public long getReceivedAt() {
        return receivedAt_;
      }
      /**
       * <pre>
       * received at timestamp
       * </pre>
       *
       * <code>uint64 received_at = 2;</code>
       * @param value The receivedAt to set.
       * @return This builder for chaining.
       */
      public Builder setReceivedAt(long value) {

        receivedAt_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * received at timestamp
       * </pre>
       *
       * <code>uint64 received_at = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReceivedAt() {
        bitField0_ = (bitField0_ & ~0x00000002);
        receivedAt_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:qaul.net.crypto.SecondHandshake)
    }

    // @@protoc_insertion_point(class_scope:qaul.net.crypto.SecondHandshake)
    private static final qaul.net.crypto.CryptoNet.SecondHandshake DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new qaul.net.crypto.CryptoNet.SecondHandshake();
    }

    public static qaul.net.crypto.CryptoNet.SecondHandshake getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SecondHandshake>
        PARSER = new com.google.protobuf.AbstractParser<SecondHandshake>() {
      @java.lang.Override
      public SecondHandshake parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<SecondHandshake> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SecondHandshake> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public qaul.net.crypto.CryptoNet.SecondHandshake getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_qaul_net_crypto_CryptoserviceContainer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_qaul_net_crypto_CryptoserviceContainer_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_qaul_net_crypto_SecondHandshake_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_qaul_net_crypto_SecondHandshake_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n services/crypto/crypto_net.proto\022\017qaul" +
      ".net.crypto\"a\n\026CryptoserviceContainer\022<\n" +
      "\020second_handshake\030\001 \001(\0132 .qaul.net.crypt" +
      "o.SecondHandshakeH\000B\t\n\007message\"9\n\017Second" +
      "Handshake\022\021\n\tsignature\030\001 \001(\014\022\023\n\013received" +
      "_at\030\002 \001(\004b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_qaul_net_crypto_CryptoserviceContainer_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_qaul_net_crypto_CryptoserviceContainer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_qaul_net_crypto_CryptoserviceContainer_descriptor,
        new java.lang.String[] { "SecondHandshake", "Message", });
    internal_static_qaul_net_crypto_SecondHandshake_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_qaul_net_crypto_SecondHandshake_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_qaul_net_crypto_SecondHandshake_descriptor,
        new java.lang.String[] { "Signature", "ReceivedAt", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
